"use strict";(self.webpackChunkpanovista=self.webpackChunkpanovista||[]).push([[4406],{1611:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>o});var i=t(4848),s=t(8453);const r={title:"\u4f5c\u7528\u57df",sidebar_position:3,slug:"\u4f5c\u7528\u57df"},a="\u4f5c\u7528\u57df",l={id:"lang/rust/\u53d8\u91cf\u548c\u58f0\u660e/\u4f5c\u7528\u57df",title:"\u4f5c\u7528\u57df",description:"\u8d44\u6e90\u83b7\u53d6\u5373\u521d\u59cb\u5316RAII",source:"@site/docs/lang/rust/\u53d8\u91cf\u548c\u58f0\u660e/\u4f5c\u7528\u57df.mdx",sourceDirName:"lang/rust/\u53d8\u91cf\u548c\u58f0\u660e",slug:"/lang/rust/\u53d8\u91cf\u548c\u58f0\u660e/\u4f5c\u7528\u57df",permalink:"/docs/lang/rust/\u53d8\u91cf\u548c\u58f0\u660e/\u4f5c\u7528\u57df",draft:!1,unlisted:!1,editUrl:"https://github.com/wangenius/wangenius.github.io/tree/master/docs/lang/rust/\u53d8\u91cf\u548c\u58f0\u660e/\u4f5c\u7528\u57df.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"\u4f5c\u7528\u57df",sidebar_position:3,slug:"\u4f5c\u7528\u57df"},sidebar:"rust",previous:{title:"\u58f0\u660e",permalink:"/docs/lang/rust/\u53d8\u91cf\u548c\u58f0\u660e/\u58f0\u660e"},next:{title:"\u6240\u6709\u6743",permalink:"/docs/lang/rust/\u53d8\u91cf\u548c\u58f0\u660e/\u6240\u6709\u6743"}},c={},o=[{value:"\u8d44\u6e90\u83b7\u53d6\u5373\u521d\u59cb\u5316RAII",id:"\u8d44\u6e90\u83b7\u53d6\u5373\u521d\u59cb\u5316raii",level:2},{value:"\u6790\u6784\u51fd\u6570",id:"\u6790\u6784\u51fd\u6570",level:2},{value:"\u751f\u547d\u5468\u671f",id:"\u751f\u547d\u5468\u671f",level:2},{value:"\u663e\u5f0f\u6ce8\u91ca",id:"\u663e\u5f0f\u6ce8\u91ca",level:2},{value:"\u529f\u80fd",id:"\u529f\u80fd",level:2},{value:"\u65b9\u6cd5",id:"\u65b9\u6cd5",level:2},{value:"\u7ed3\u6784\u4f53",id:"\u7ed3\u6784\u4f53",level:2},{value:"Traits",id:"traits",level:2},{value:"Bounds",id:"bounds",level:2},{value:"\u5f3a\u8feb",id:"\u5f3a\u8feb",level:2},{value:"Static",id:"static",level:2},{value:"Elision",id:"elision",level:2},{value:"&amp;\u2019static",id:"static-1",level:5},{value:"<code>[&amp;&#39;static](https://course.rs/advance/lifetime/static.html#static)</code>",id:"statichttpscoursersadvancelifetimestatichtmlstatic",level:2},{value:"<code>[T: &#39;static](https://course.rs/advance/lifetime/static.html#t-static)</code>",id:"t-statichttpscoursersadvancelifetimestatichtmlt-static",level:2},{value:"static \u5230\u5e95\u9488\u5bf9\u8c01\uff1f",id:"static-\u5230\u5e95\u9488\u5bf9\u8c01",level:2},{value:"\u8bfe\u540e\u7ec3\u4e60",id:"\u8bfe\u540e\u7ec3\u4e60",level:2},{value:"\u603b\u7ed3",id:"\u603b\u7ed3",level:2}];function d(n){const e={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h5:"h5",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"\u4f5c\u7528\u57df",children:"\u4f5c\u7528\u57df"}),"\n",(0,i.jsx)(e.h2,{id:"\u8d44\u6e90\u83b7\u53d6\u5373\u521d\u59cb\u5316raii",children:"\u8d44\u6e90\u83b7\u53d6\u5373\u521d\u59cb\u5316RAII"}),"\n",(0,i.jsx)(e.p,{children:"\u8303\u56f4\u5728\u6240\u6709\u6743\u3001\u501f\u7528\u548c\u751f\u547d\u5468\u671f\u4e2d\u53d1\u6325\u7740\u91cd\u8981\u4f5c\u7528\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4eec\u5411\u7f16\u8bd1\u5668\u6307\u793a\u501f\u7528\u4f55\u65f6\u6709\u6548\u3001\u4f55\u65f6\u53ef\u4ee5\u91ca\u653e\u8d44\u6e90\u4ee5\u53ca\u4f55\u65f6\u521b\u5efa\u6216\u9500\u6bc1\u53d8\u91cf\u3002"}),"\n",(0,i.jsxs)(e.p,{children:["Rust \u4e2d\u7684\u53d8\u91cf\u4e0d\u4ec5\u4ec5\u662f\u5728\u5806\u6808\u4e2d\u4fdd\u5b58\u6570\u636e\uff1a\u5b83\u4eec\u8fd8\u62e5\u6709\u8d44\u6e90\uff0c\u4f8b\u5982 ",(0,i.jsx)(e.code,{children:"Box<T>"})," \u62e5\u6709\u5806\u4e2d\u7684\u5185\u5b58\u3002 Rust \u5f3a\u5236\u6267\u884c RAII\uff08\u8d44\u6e90\u83b7\u53d6\u5373\u521d\u59cb\u5316\uff09\uff0c\u56e0\u6b64\u6bcf\u5f53\u5bf9\u8c61\u8d85\u51fa\u8303\u56f4\u65f6\uff0c\u5c31\u4f1a\u8c03\u7528\u5176\u6790\u6784\u51fd\u6570\u5e76\u91ca\u653e\u5176\u62e5\u6709\u7684\u8d44\u6e90\u3002"]}),"\n",(0,i.jsx)(e.p,{children:"\u6b64\u884c\u4e3a\u53ef\u4ee5\u9632\u6b62\u8d44\u6e90\u6cc4\u6f0f\u9519\u8bef\uff0c\u56e0\u6b64\u60a8\u6c38\u8fdc\u4e0d\u5fc5\u624b\u52a8\u91ca\u653e\u5185\u5b58\u6216\u518d\u6b21\u62c5\u5fc3\u5185\u5b58\u6cc4\u6f0f\uff01\u8fd9\u662f\u4e00\u4e2a\u5feb\u901f\u5c55\u793a\uff1a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"// raii.rs\nfn create_box() {\n    // Allocate an integer on the heap\n    let _box1 = Box::new(3i32);\n\n    // `_box1` is destroyed here, and memory gets freed\n}\n\nfn main() {\n    // Allocate an integer on the heap\n    let _box2 = Box::new(5i32);\n\n    // A nested scope:\n    {\n        // Allocate an integer on the heap\n        let _box3 = Box::new(4i32);\n\n        // `_box3` is destroyed here, and memory gets freed\n    }\n\n    // Creating lots of boxes just for fun\n    // There's no need to manually free memory!\n    for _ in 0u32..1_000 {\n        create_box();\n    }\n\n    // `_box2` is destroyed here, and memory gets freed\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:"\u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 valgrind \u4ed4\u7ec6\u68c0\u67e5\u5185\u5b58\u9519\u8bef\uff1a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"$ rustc raii.rs && valgrind ./raii\n==26873== Memcheck, a memory error detector\n==26873== Copyright (C) 2002-2013, and GNU GPLd, by Julian Seward et al.\n==26873== Using Valgrind-3.9.0 and LibVEX; rerun with -h for copyright info\n==26873== Command: ./raii\n==26873==\n==26873==\n==26873== HEAP SUMMARY:\n==26873==     in use at exit: 0 bytes in 0 blocks\n==26873==   total heap usage: 1,013 allocs, 1,013 frees, 8,696 bytes allocated\n==26873==\n==26873== All heap blocks were freed -- no leaks are possible\n==26873==\n==26873== For counts of detected and suppressed errors, rerun with: -v\n==26873== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n"})}),"\n",(0,i.jsx)(e.p,{children:"\u8fd9\u91cc\u6ca1\u6709\u6cc4\u6f0f\uff01"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'fn main() {\n    let shadowed_binding = 1;\n\n    {\n        println!("before being shadowed: {}", shadowed_binding);\n\n        // This binding *shadows* the outer one\n        let shadowed_binding = "abc";\n\n        println!("shadowed in inner block: {}", shadowed_binding);\n    }\n    println!("outside inner block: {}", shadowed_binding);\n\n    // This binding *shadows* the previous binding\n    let shadowed_binding = 2;\n    println!("shadowed in outer block: {}", shadowed_binding);\n}\n'})}),"\n",(0,i.jsx)(e.h2,{id:""}),"\n",(0,i.jsx)(e.p,{children:"\u5f53\u6570\u636e\u88ab\u540c\u540d\u4e0d\u53ef\u6539\u53d8\u5730\u7ed1\u5b9a\u65f6\uff0c\u5b83\u4e5f\u4f1a\u51bb\u7ed3\u3002\u5728\u4e0d\u53ef\u53d8\u7ed1\u5b9a\u8d85\u51fa\u8303\u56f4\u4e4b\u524d\uff0c\u65e0\u6cd5\u4fee\u6539\u51bb\u7ed3\u6570\u636e\uff1a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"fn main() {\n    let mut _mutable_integer = 7i32;\n\n    {\n        // Shadowing by immutable `_mutable_integer`\n        let _mutable_integer = _mutable_integer;\n\n        // Error! `_mutable_integer` is frozen in this scope\n        _mutable_integer = 50;\n        // FIXME ^ Comment out this line\n\n        // `_mutable_integer` goes out of scope\n    }\n\n    // Ok! `_mutable_integer` is not frozen in this scope\n    _mutable_integer = 3;\n}\n"})}),"\n",(0,i.jsx)(e.h2,{id:"\u6790\u6784\u51fd\u6570",children:"\u6790\u6784\u51fd\u6570"}),"\n",(0,i.jsx)(e.p,{children:"Rust \u4e2d\u6790\u6784\u51fd\u6570\u7684\u6982\u5ff5\u662f\u901a\u8fc7 Drop \u7279\u5f81\u63d0\u4f9b\u7684\u3002\u5f53\u8d44\u6e90\u8d85\u51fa\u8303\u56f4\u65f6\uff0c\u5c06\u8c03\u7528\u6790\u6784\u51fd\u6570\u3002\u4e0d\u9700\u8981\u4e3a\u6bcf\u4e2a\u7c7b\u578b\u5b9e\u73b0\u6b64\u7279\u5f81\uff0c\u4ec5\u5f53\u60a8\u9700\u8981\u81ea\u5df1\u7684\u6790\u6784\u51fd\u6570\u903b\u8f91\u65f6\u624d\u4e3a\u60a8\u7684\u7c7b\u578b\u5b9e\u73b0\u5b83\u3002"}),"\n",(0,i.jsx)(e.p,{children:"\u8fd0\u884c\u4ee5\u4e0b\u793a\u4f8b\u4ee5\u67e5\u770b Drop \u7279\u5f81\u5982\u4f55\u5de5\u4f5c\u3002\u5f53 main \u51fd\u6570\u4e2d\u7684\u53d8\u91cf\u8d85\u51fa\u8303\u56f4\u65f6\uff0c\u5c06\u8c03\u7528\u81ea\u5b9a\u4e49\u6790\u6784\u51fd\u6570\u3002"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'struct ToDrop;\n\nimpl Drop for ToDrop {\n    fn drop(&mut self) {\n        println!("ToDrop is being dropped");\n    }\n}\n\nfn main() {\n    let x = ToDrop;\n    println!("Made a ToDrop!");\n}\n'})}),"\n",(0,i.jsx)(e.h2,{id:"\u751f\u547d\u5468\u671f",children:"\u751f\u547d\u5468\u671f"}),"\n",(0,i.jsx)(e.p,{children:"\u751f\u547d\u5468\u671f\u662f\u7f16\u8bd1\u5668\uff08\u6216\u66f4\u5177\u4f53\u5730\u8bf4\uff0c\u5176\u501f\u7528\u68c0\u67e5\u5668\uff09\u7528\u6765\u786e\u4fdd\u6240\u6709\u501f\u7528\u6709\u6548\u7684\u6784\u9020\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\u4ece\u521b\u5efa\u65f6\u5f00\u59cb\uff0c\u5230\u9500\u6bc1\u65f6\u7ed3\u675f\u3002\u867d\u7136\u751f\u547d\u5468\u671f\u548c\u4f5c\u7528\u57df\u7ecf\u5e38\u4e00\u8d77\u63d0\u53ca\uff0c\u4f46\u5b83\u4eec\u5e76\u4e0d\u76f8\u540c\u3002"}),"\n",(0,i.jsx)(e.p,{children:"\u4ee5\u6211\u4eec\u901a\u8fc7 & \u501f\u7528\u53d8\u91cf\u7684\u60c5\u51b5\u4e3a\u4f8b\u3002\u501f\u7528\u7684\u751f\u547d\u5468\u671f\u7531\u58f0\u660e\u5b83\u7684\u4f4d\u7f6e\u51b3\u5b9a\u3002\u56e0\u6b64\uff0c\u53ea\u8981\u501f\u8d37\u5728\u8d37\u65b9\u88ab\u6d88\u706d\u4e4b\u524d\u7ed3\u675f\uff0c\u501f\u8d37\u5c31\u662f\u6709\u6548\u7684\u3002\u4f46\u662f\uff0c\u501f\u7528\u7684\u8303\u56f4\u53d6\u51b3\u4e8e\u5f15\u7528\u7684\u4f7f\u7528\u4f4d\u7f6e\u3002"}),"\n",(0,i.jsx)(e.p,{children:"\u5728\u4e0b\u9762\u7684\u793a\u4f8b\u548c\u672c\u8282\u7684\u5176\u4f59\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u5c06\u4e86\u89e3\u751f\u547d\u5468\u671f\u4e0e\u4f5c\u7528\u57df\u7684\u5173\u7cfb\uff0c\u4ee5\u53ca\u4e24\u8005\u6709\u4f55\u4e0d\u540c\u3002"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'// Lifetimes are annotated below with lines denoting the creation\n// and destruction of each variable.\n// `i` has the longest lifetime because its scope entirely encloses \n// both `borrow1` and `borrow2`. The duration of `borrow1` compared \n// to `borrow2` is irrelevant since they are disjoint.\nfn main() {\n    let i = 3; // Lifetime for `i` starts. \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    //                                                     \u2502\n    { //                                                   \u2502\n        let borrow1 = &i; // `borrow1` lifetime starts. \u2500\u2500\u2510\u2502\n        //                                                \u2502\u2502\n        println!("borrow1: {}", borrow1); //              \u2502\u2502\n    } // `borrow1` ends. \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\n    //                                                     \u2502\n    //                                                     \u2502\n    { //                                                   \u2502\n        let borrow2 = &i; // `borrow2` lifetime starts. \u2500\u2500\u2510\u2502\n        //                                                \u2502\u2502\n        println!("borrow2: {}", borrow2); //              \u2502\u2502\n    } // `borrow2` ends. \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\n    //                                                     \u2502\n}   // Lifetime ends. \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n'})}),"\n",(0,i.jsx)(e.p,{children:"\u8bf7\u6ce8\u610f\uff0c\u6ca1\u6709\u4e3a\u6807\u7b7e\u751f\u547d\u5468\u671f\u5206\u914d\u540d\u79f0\u6216\u7c7b\u578b\u3002\u6b63\u5982\u6211\u4eec\u5c06\u770b\u5230\u7684\uff0c\u8fd9\u9650\u5236\u4e86\u751f\u547d\u5468\u671f\u7684\u4f7f\u7528\u65b9\u5f0f\u3002"}),"\n",(0,i.jsx)(e.h2,{id:"\u663e\u5f0f\u6ce8\u91ca",children:"\u663e\u5f0f\u6ce8\u91ca"}),"\n",(0,i.jsx)(e.p,{children:"\u501f\u7528\u68c0\u67e5\u5668\u4f7f\u7528\u663e\u5f0f\u7684\u751f\u547d\u5468\u671f\u6ce8\u91ca\u6765\u786e\u5b9a\u5f15\u7528\u7684\u6709\u6548\u65f6\u95f4\u3002\u5728\u6ca1\u6709\u7701\u7565\u751f\u547d\u5468\u671f 1 \u7684\u60c5\u51b5\u4e0b\uff0cRust \u9700\u8981\u663e\u5f0f\u6ce8\u91ca\u6765\u786e\u5b9a\u5f15\u7528\u7684\u751f\u547d\u5468\u671f\u5e94\u8be5\u662f\u4ec0\u4e48\u3002\u663e\u5f0f\u6ce8\u91ca\u751f\u547d\u5468\u671f\u7684\u8bed\u6cd5\u4f7f\u7528\u6487\u53f7\u5b57\u7b26\uff0c\u5982\u4e0b\u6240\u793a\uff1a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"foo<'a>\n// `foo` has a lifetime parameter `'a`\n"})}),"\n",(0,i.jsxs)(e.p,{children:["\u4e0e\u95ed\u5305\u7c7b\u4f3c\uff0c\u4f7f\u7528\u751f\u547d\u5468\u671f\u9700\u8981\u6cdb\u578b\u3002\u6b64\u5916\uff0c\u6b64\u751f\u547d\u5468\u671f\u8bed\u6cd5\u6307\u793a foo \u7684\u751f\u547d\u5468\u671f\u4e0d\u5f97\u8d85\u8fc7 'a \u7684\u751f\u547d\u5468\u671f\u3002\u7c7b\u578b\u7684\u663e\u5f0f\u6ce8\u91ca\u5177\u6709 ",(0,i.jsx)(e.code,{children:"&'a T"})," \u5f62\u5f0f\uff0c\u5176\u4e2d\u5df2\u7ecf\u5f15\u5165\u4e86 'a \u3002"]}),"\n",(0,i.jsx)(e.p,{children:"\u5728\u5177\u6709\u591a\u4e2a\u751f\u547d\u5468\u671f\u7684\u60c5\u51b5\u4e0b\uff0c\u8bed\u6cd5\u7c7b\u4f3c\uff1a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"foo<'a, 'b>\n// `foo` has lifetime parameters `'a` and `'b`\n"})}),"\n",(0,i.jsx)(e.p,{children:"\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c foo \u7684\u751f\u547d\u5468\u671f\u4e0d\u80fd\u8d85\u8fc7 'a \u6216 'b \u7684\u751f\u547d\u5468\u671f\u3002"}),"\n",(0,i.jsx)(e.p,{children:"\u6709\u5173\u4f7f\u7528\u4e2d\u7684\u663e\u5f0f\u751f\u547d\u5468\u671f\u6ce8\u91ca\uff0c\u8bf7\u53c2\u9605\u4ee5\u4e0b\u793a\u4f8b\uff1a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"// `print_refs` takes two references to `i32` which have different\n// lifetimes `'a` and `'b`. These two lifetimes must both be at\n// least as long as the function `print_refs`.\nfn print_refs<'a, 'b>(x: &'a i32, y: &'b i32) {\n    println!(\"x is {} and y is {}\", x, y);\n}\n\n// A function which takes no arguments, but has a lifetime parameter `'a`.\nfn failed_borrow<'a>() {\n    let _x = 12;\n\n    // ERROR: `_x` does not live long enough\n    let _y: &'a i32 = &_x;\n    // Attempting to use the lifetime `'a` as an explicit type annotation \n    // inside the function will fail because the lifetime of `&_x` is shorter\n    // than that of `_y`. A short lifetime cannot be coerced into a longer one.\n}\n\nfn main() {\n    // Create variables to be borrowed below.\n    let (four, nine) = (4, 9);\n    \n    // Borrows (`&`) of both variables are passed into the function.\n    print_refs(&four, &nine);\n    // Any input which is borrowed must outlive the borrower. \n    // In other words, the lifetime of `four` and `nine` must \n    // be longer than that of `print_refs`.\n    \n    failed_borrow();\n    // `failed_borrow` contains no references to force `'a` to be \n    // longer than the lifetime of the function, but `'a` is longer.\n    // Because the lifetime is never constrained, it defaults to `'static`.\n}\n"})}),"\n",(0,i.jsx)(e.h2,{id:"\u529f\u80fd",children:"\u529f\u80fd"}),"\n",(0,i.jsx)(e.p,{children:"\u5ffd\u7565\u7701\u7565\uff0c\u5177\u6709\u751f\u547d\u5468\u671f\u7684\u51fd\u6570\u7b7e\u540d\u6709\u4e00\u4e9b\u9650\u5236\uff1a"}),"\n",(0,i.jsx)(e.p,{children:"\u4efb\u4f55\u5f15\u7528\u90fd\u5fc5\u987b\u6709\u6ce8\u91ca\u7684\u751f\u547d\u5468\u671f\u3002\n\u8fd4\u56de\u7684\u4efb\u4f55\u5f15\u7528\u5fc5\u987b\u4e0e\u8f93\u5165\u5177\u6709\u76f8\u540c\u7684\u751f\u547d\u5468\u671f\u6216\u8005\u662f static \u3002\n\u6b64\u5916\uff0c\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u8fd4\u56de\u6ca1\u6709\u8f93\u5165\u7684\u5f15\u7528\u4f1a\u5bfc\u81f4\u8fd4\u56de\u5bf9\u65e0\u6548\u6570\u636e\u7684\u5f15\u7528\uff0c\u5219\u7981\u6b62\u8fd4\u56de\u5f15\u7528\u3002\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u4e86\u5177\u6709\u751f\u547d\u5468\u671f\u7684\u51fd\u6570\u7684\u4e00\u4e9b\u6709\u6548\u5f62\u5f0f\uff1a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"// One input reference with lifetime `'a` which must live\n// at least as long as the function.\nfn print_one<'a>(x: &'a i32) {\n    println!(\"`print_one`: x is {}\", x);\n}\n\n// Mutable references are possible with lifetimes as well.\nfn add_one<'a>(x: &'a mut i32) {\n    *x += 1;\n}\n\n// Multiple elements with different lifetimes. In this case, it\n// would be fine for both to have the same lifetime `'a`, but\n// in more complex cases, different lifetimes may be required.\nfn print_multi<'a, 'b>(x: &'a i32, y: &'b i32) {\n    println!(\"`print_multi`: x is {}, y is {}\", x, y);\n}\n\n// Returning references that have been passed in is acceptable.\n// However, the correct lifetime must be returned.\nfn pass_x<'a, 'b>(x: &'a i32, _: &'b i32) -> &'a i32 { x }\n\n//fn invalid_output<'a>() -> &'a String { &String::from(\"foo\") }\n// The above is invalid: `'a` must live longer than the function.\n// Here, `&String::from(\"foo\")` would create a `String`, followed by a\n// reference. Then the data is dropped upon exiting the scope, leaving\n// a reference to invalid data to be returned.\n\nfn main() {\n    let x = 7;\n    let y = 9;\n    \n    print_one(&x);\n    print_multi(&x, &y);\n    \n    let z = pass_x(&x, &y);\n    print_one(z);\n\n    let mut t = 3;\n    add_one(&mut t);\n    print_one(&t);\n}\n"})}),"\n",(0,i.jsx)(e.h2,{id:"\u65b9\u6cd5",children:"\u65b9\u6cd5"}),"\n",(0,i.jsx)(e.p,{children:"\u65b9\u6cd5\u7684\u6ce8\u91ca\u4e0e\u51fd\u6570\u7c7b\u4f3c\uff1a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"struct Owner(i32);\n\nimpl Owner {\n    // Annotate lifetimes as in a standalone function.\n    fn add_one<'a>(&'a mut self) { self.0 += 1; }\n    fn print<'a>(&'a self) {\n        println!(\"`print`: {}\", self.0);\n    }\n}\n\nfn main() {\n    let mut owner = Owner(18);\n\n    owner.add_one();\n    owner.print();\n}\n"})}),"\n",(0,i.jsx)(e.h2,{id:"\u7ed3\u6784\u4f53",children:"\u7ed3\u6784\u4f53"}),"\n",(0,i.jsx)(e.p,{children:"\u7ed3\u6784\u4f53\u4e2d\u751f\u547d\u5468\u671f\u7684\u6ce8\u91ca\u4e5f\u4e0e\u51fd\u6570\u7c7b\u4f3c\uff1a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'// A type `Borrowed` which houses a reference to an\n// `i32`. The reference to `i32` must outlive `Borrowed`.\n#[derive(Debug)]\nstruct Borrowed<\'a>(&\'a i32);\n\n// Similarly, both references here must outlive this structure.\n#[derive(Debug)]\nstruct NamedBorrowed<\'a> {\n    x: &\'a i32,\n    y: &\'a i32,\n}\n\n// An enum which is either an `i32` or a reference to one.\n#[derive(Debug)]\nenum Either<\'a> {\n    Num(i32),\n    Ref(&\'a i32),\n}\n\nfn main() {\n    let x = 18;\n    let y = 15;\n\n    let single = Borrowed(&x);\n    let double = NamedBorrowed { x: &x, y: &y };\n    let reference = Either::Ref(&x);\n    let number    = Either::Num(y);\n\n    println!("x is borrowed in {:?}", single);\n    println!("x and y are borrowed in {:?}", double);\n    println!("x is borrowed in {:?}", reference);\n    println!("y is *not* borrowed in {:?}", number);\n}\n'})}),"\n",(0,i.jsx)(e.h2,{id:"traits",children:"Traits"}),"\n",(0,i.jsx)(e.p,{children:"Trait \u65b9\u6cd5\u4e2d\u751f\u547d\u5468\u671f\u7684\u6ce8\u91ca\u57fa\u672c\u4e0a\u4e0e\u51fd\u6570\u7c7b\u4f3c\u3002\u8bf7\u6ce8\u610f\uff0c impl \u4e5f\u53ef\u80fd\u6709\u751f\u547d\u5468\u671f\u6ce8\u91ca\u3002"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"// A struct with annotation of lifetimes.\n#[derive(Debug)]\nstruct Borrowed<'a> {\n    x: &'a i32,\n}\n\n// Annotate lifetimes to impl.\nimpl<'a> Default for Borrowed<'a> {\n    fn default() -> Self {\n        Self {\n            x: &10,\n        }\n    }\n}\n\nfn main() {\n    let b: Borrowed = Default::default();\n    println!(\"b is {:?}\", b);\n}\n"})}),"\n",(0,i.jsx)(e.h2,{id:"bounds",children:"Bounds"}),"\n",(0,i.jsx)(e.p,{children:"\u5c31\u50cf\u6cdb\u578b\u7c7b\u578b\u53ef\u4ee5\u6709\u754c\u4e00\u6837\uff0c\u751f\u547d\u5468\u671f\uff08\u672c\u8eab\u5c31\u662f\u6cdb\u578b\uff09\u4e5f\u4f7f\u7528\u754c\u9650\u3002 : \u5b57\u7b26\u5728\u8fd9\u91cc\u7684\u542b\u4e49\u7565\u6709\u4e0d\u540c\uff0c\u4f46 + \u662f\u76f8\u540c\u7684\u3002\u8bf7\u6ce8\u610f\u4ee5\u4e0b\u5185\u5bb9\uff1a"}),"\n",(0,i.jsx)(e.p,{children:"T: 'a \uff1a T \u4e2d\u7684\u6240\u6709\u5f15\u7528\u7684\u751f\u547d\u5468\u671f\u5fc5\u987b\u8d85\u8fc7 'a \u3002\nT: Trait + 'a \uff1a\u7c7b\u578b T \u5fc5\u987b\u5b9e\u73b0\u7279\u5f81 Trait \uff0c\u5e76\u4e14 T \u4e2d\u7684\u6240\u6709\u5f15\u7528\u90fd\u5fc5\u987b\u6bd4 'a \u66f4\u957f\u5bff\u3002\n\u4e0b\u9762\u7684\u793a\u4f8b\u663e\u793a\u4e86\u5173\u952e\u5b57 where \u4e4b\u540e\u4f7f\u7528\u7684\u4e0a\u8ff0\u8bed\u6cd5\uff1a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"use std::fmt::Debug; // Trait to bound with.\n\n#[derive(Debug)]\nstruct Ref<'a, T: 'a>(&'a T);\n// `Ref` contains a reference to a generic type `T` that has\n// an unknown lifetime `'a`. `T` is bounded such that any\n// *references* in `T` must outlive `'a`. Additionally, the lifetime\n// of `Ref` may not exceed `'a`.\n\n// A generic function which prints using the `Debug` trait.\nfn print<T>(t: T) where\n    T: Debug {\n    println!(\"`print`: t is {:?}\", t);\n}\n\n// Here a reference to `T` is taken where `T` implements\n// `Debug` and all *references* in `T` outlive `'a`. In\n// addition, `'a` must outlive the function.\nfn print_ref<'a, T>(t: &'a T) where\n    T: Debug + 'a {\n    println!(\"`print_ref`: t is {:?}\", t);\n}\n\nfn main() {\n    let x = 7;\n    let ref_x = Ref(&x);\n\n    print_ref(&ref_x);\n    print(ref_x);\n}\n"})}),"\n",(0,i.jsx)(e.h2,{id:"\u5f3a\u8feb",children:"\u5f3a\u8feb"}),"\n",(0,i.jsx)(e.p,{children:"Coercion\n\u8f83\u957f\u7684\u751f\u547d\u5468\u671f\u53ef\u4ee5\u88ab\u5f3a\u5236\u4e3a\u8f83\u77ed\u7684\u751f\u547d\u5468\u671f\uff0c\u4ee5\u4fbf\u5b83\u5728\u901a\u5e38\u65e0\u6cd5\u5de5\u4f5c\u7684\u8303\u56f4\u5185\u5de5\u4f5c\u3002\u8fd9\u4ee5 Rust \u7f16\u8bd1\u5668\u63a8\u65ad\u5f3a\u5236\u7684\u5f62\u5f0f\u51fa\u73b0\uff0c\u4e5f\u4ee5\u58f0\u660e\u751f\u547d\u5468\u671f\u5dee\u5f02\u7684\u5f62\u5f0f\u51fa\u73b0\uff1a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"// Here, Rust infers a lifetime that is as short as possible.\n// The two references are then coerced to that lifetime.\nfn multiply<'a>(first: &'a i32, second: &'a i32) -> i32 {\n    first * second\n}\n\n// `<'a: 'b, 'b>` reads as lifetime `'a` is at least as long as `'b`.\n// Here, we take in an `&'a i32` and return a `&'b i32` as a result of coercion.\nfn choose_first<'a: 'b, 'b>(first: &'a i32, _: &'b i32) -> &'b i32 {\n    first\n}\n\nfn main() {\n    let first = 2; // Longer lifetime\n    \n    {\n        let second = 3; // Shorter lifetime\n        \n        println!(\"The product is {}\", multiply(&first, &second));\n        println!(\"{} is the first\", choose_first(&first, &second));\n    };\n}\n"})}),"\n",(0,i.jsx)(e.h2,{id:"static",children:"Static"}),"\n",(0,i.jsx)(e.p,{children:"Rust \u6709\u4e00\u4e9b\u4fdd\u7559\u7684\u751f\u547d\u5468\u671f\u540d\u79f0\u3002\u5176\u4e2d\u4e4b\u4e00\u662f 'static \u3002\u60a8\u53ef\u80fd\u4f1a\u5728\u4e24\u79cd\u60c5\u51b5\u4e0b\u9047\u5230\u5b83\uff1a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"// A reference with 'static lifetime:\nlet s: &'static str = \"hello world\";\n\n// 'static as part of a trait bound:\nfn generic<T>(x: T) where T: 'static {}\n"})}),"\n",(0,i.jsx)(e.p,{children:"\u4e24\u8005\u76f8\u5173\u4f46\u7565\u6709\u4e0d\u540c\uff0c\u8fd9\u662f\u5b66\u4e60 Rust \u65f6\u5bb9\u6613\u6df7\u6dc6\u7684\u4e00\u4e2a\u5e38\u89c1\u539f\u56e0\u3002\u4ee5\u4e0b\u662f\u6bcf\u79cd\u60c5\u51b5\u7684\u4e00\u4e9b\u793a\u4f8b\uff1a"}),"\n",(0,i.jsx)(e.p,{children:"\u4f5c\u4e3a\u5f15\u7528\u751f\u547d\u5468\u671f 'static \u8868\u793a\u5f15\u7528\u6307\u5411\u7684\u6570\u636e\u5728\u6b63\u5728\u8fd0\u884c\u7684\u7a0b\u5e8f\u7684\u5269\u4f59\u751f\u547d\u5468\u671f\u5185\u6709\u6548\u3002\u5b83\u4ecd\u7136\u53ef\u4ee5\u88ab\u5f3a\u5236\u7f29\u77ed\u5bff\u547d\u3002"}),"\n",(0,i.jsx)(e.p,{children:"\u6709\u4e24\u79cd\u5e38\u89c1\u7684\u65b9\u6cd5\u53ef\u4ee5\u4f7f\u53d8\u91cf\u5177\u6709 'static \u751f\u547d\u5468\u671f\uff0c\u5e76\u4e14\u90fd\u5b58\u50a8\u5728\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u53ea\u8bfb\u5185\u5b58\u4e2d\uff1a"}),"\n",(0,i.jsx)(e.p,{children:"\u4f7f\u7528 static \u58f0\u660e\u521b\u5efa\u4e00\u4e2a\u5e38\u91cf\u3002\n\u521b\u5efa\u4e00\u4e2a string \u6587\u5b57\uff0c\u5176\u7c7b\u578b\u4e3a\uff1a &'static str \u3002\n\u8bf7\u53c2\u9605\u4ee5\u4e0b\u793a\u4f8b\u4e86\u89e3\u6bcf\u79cd\u65b9\u6cd5\u7684\u663e\u793a\uff1a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'// Make a constant with `\'static` lifetime.\nstatic NUM: i32 = 18;\n\n// Returns a reference to `NUM` where its `\'static`\n// lifetime is coerced to that of the input argument.\nfn coerce_static<\'a>(_: &\'a i32) -> &\'a i32 {\n    &NUM\n}\n\nfn main() {\n    {\n        // Make a `string` literal and print it:\n        let static_string = "I\'m in read-only memory";\n        println!("static_string: {}", static_string);\n\n        // When `static_string` goes out of scope, the reference\n        // can no longer be used, but the data remains in the binary.\n    }\n\n    {\n        // Make an integer to use for `coerce_static`:\n        let lifetime_num = 9;\n\n        // Coerce `NUM` to lifetime of `lifetime_num`:\n        let coerced_static = coerce_static(&lifetime_num);\n\n        println!("coerced_static: {}", coerced_static);\n    }\n\n    println!("NUM: {} stays accessible!", NUM);\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:"\u7531\u4e8e 'static \u5f15\u7528\u53ea\u9700\u5728\u7a0b\u5e8f\u751f\u547d\u5468\u671f\u7684\u5269\u4f59\u65f6\u95f4\u5185\u6709\u6548\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728\u7a0b\u5e8f\u6267\u884c\u65f6\u521b\u5efa\u5b83\u4eec\u3002\u53ea\u662f\u4e3a\u4e86\u6f14\u793a\uff0c\u4e0b\u9762\u7684\u793a\u4f8b\u4f7f\u7528 Box::leak \u52a8\u6001\u521b\u5efa 'static \u5f15\u7528\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u80af\u5b9a\u4e0d\u4f1a\u5728\u6574\u4e2a\u6301\u7eed\u65f6\u95f4\u5185\u90fd\u5b58\u5728\uff0c\u800c\u53ea\u4f1a\u5728\u6cc4\u6f0f\u70b9\u4e4b\u540e\u5b58\u5728\u3002"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"extern crate rand;\nuse rand::Fill;\n\nfn random_vec() -> &'static [usize; 100] {\n    let mut rng = rand::thread_rng();\n    let mut boxed = Box::new([0; 100]);\n    boxed.try_fill(&mut rng).unwrap();\n    Box::leak(boxed)\n}\n\nfn main() {\n    let first: &'static [usize; 100] = random_vec();\n    let second: &'static [usize; 100] = random_vec();\n    assert_ne!(first, second)\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:"\u4f5c\u4e3a\u7279\u5f81\u7ed1\u5b9a\uff0c\u8fd9\u610f\u5473\u7740\u8be5\u7c7b\u578b\u4e0d\u5305\u542b\u4efb\u4f55\u975e\u9759\u6001\u5f15\u7528\u3002\u4f8b\u5982\u3002\u63a5\u6536\u8005\u53ef\u4ee5\u6839\u636e\u9700\u8981\u4fdd\u7559\u8be5\u7c7b\u578b\uff0c\u5e76\u4e14\u5728\u4e22\u5f03\u8be5\u7c7b\u578b\u4e4b\u524d\u8be5\u7c7b\u578b\u6c38\u8fdc\u4e0d\u4f1a\u53d8\u5f97\u65e0\u6548\u3002"}),"\n",(0,i.jsx)(e.p,{children:"\u91cd\u8981\u7684\u662f\u8981\u7406\u89e3\u8fd9\u610f\u5473\u7740\u4efb\u4f55\u62e5\u6709\u7684\u6570\u636e\u603b\u662f\u901a\u8fc7 'static \u751f\u547d\u5468\u671f\u754c\u9650\uff0c\u4f46\u5bf9\u8be5\u62e5\u6709\u7684\u6570\u636e\u7684\u5f15\u7528\u901a\u5e38\u4e0d\u4f1a\uff1a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"use std::fmt::Debug;\n\nfn print_it( input: impl Debug + 'static ) {\n    println!( \"'static value passed in is: {:?}\", input );\n}\n\nfn main() {\n    // i is owned and contains no references, thus it's 'static:\n    let i = 5;\n    print_it(i);\n\n    // oops, &i only has the lifetime defined by the scope of\n    // main(), so it's not 'static:\n    print_it(&i);\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:"\u7f16\u8bd1\u5668\u4f1a\u544a\u8bc9\u4f60\uff1a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-text",metastring:'title="output"',children:"error[E0597]: `i` does not live long enough\n  --\x3e src/lib.rs:15:15\n   |\n15 |     print_it(&i);\n   |     ---------^^--\n   |     |         |\n   |     |         borrowed value does not live long enough\n   |     argument requires that `i` is borrowed for `'static`\n16 | }\n   | - `i` dropped here while still borrowed\n"})}),"\n",(0,i.jsx)(e.h2,{id:"elision",children:"Elision"}),"\n",(0,i.jsx)(e.p,{children:"\u4e00\u4e9b\u751f\u547d\u5468\u671f\u6a21\u5f0f\u975e\u5e38\u5e38\u89c1\uff0c\u56e0\u6b64\u501f\u7528\u68c0\u67e5\u5668\u5c06\u5141\u8bb8\u60a8\u7701\u7565\u5b83\u4eec\u4ee5\u8282\u7701\u6253\u5b57\u5e76\u63d0\u9ad8\u53ef\u8bfb\u6027\u3002\u8fd9\u79f0\u4e3a\u7701\u7565\u3002 Rust \u4e2d\u5b58\u5728\u7701\u7565\u53ea\u662f\u56e0\u4e3a\u8fd9\u4e9b\u6a21\u5f0f\u5f88\u5e38\u89c1\u3002"}),"\n",(0,i.jsx)(e.p,{children:"\u4ee5\u4e0b\u4ee3\u7801\u663e\u793a\u4e86\u4e00\u4e9b\u7701\u7565\u7684\u793a\u4f8b\u3002\u6709\u5173\u7701\u7565\u7684\u66f4\u5168\u9762\u7684\u63cf\u8ff0\uff0c\u8bf7\u53c2\u9605\u672c\u4e66\u4e2d\u7684\u751f\u547d\u5468\u671f\u7701\u7565\u3002"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'// `elided_input` and `annotated_input` essentially have identical signatures\n// because the lifetime of `elided_input` is inferred by the compiler:\nfn elided_input(x: &i32) {\n    println!("`elided_input`: {}", x);\n}\n\nfn annotated_input<\'a>(x: &\'a i32) {\n    println!("`annotated_input`: {}", x);\n}\n\n// Similarly, `elided_pass` and `annotated_pass` have identical signatures\n// because the lifetime is added implicitly to `elided_pass`:\nfn elided_pass(x: &i32) -> &i32 { x }\n\nfn annotated_pass<\'a>(x: &\'a i32) -> &\'a i32 { x }\n\nfn main() {\n    let x = 3;\n\n    elided_input(&x);\n    annotated_input(&x);\n\n    println!("`elided_pass`: {}", elided_pass(&x));\n    println!("`annotated_pass`: {}", annotated_pass(&x));\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:"\u751f\u547d\u5468\u671f\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u5f15\u7528\u6240\u80fd\u6301\u7eed\u7684\u8303\u56f4\uff0c\u662f\u7f16\u8bd1\u5668\u7528\u4e8e\u9884\u9632\u60ac\u5782\u5f15\u7528\uff08\u5728\u5bf9\u5e94\u7684\u503c\u5df2\u7ecf\u88ab\u6790\u6784\u540e\u4ecd\u88ab\u4f7f\u7528\uff09\u7684\u65b9\u5f0f\u3002\u8fd9\u5728 Rust \u4e2d\u7279\u522b\u91cd\u8981\uff0c\u56e0\u4e3a Rust \u653e\u5f03\u4e86\u5783\u573e\u6536\u96c6\u5668\u5e76\u9009\u62e9\u624b\u52a8\u7ba1\u7406\u5185\u5b58\u3002"}),"\n",(0,i.jsx)(e.p,{children:"\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\uff0crust \u7f16\u8bd1\u5668\u53ef\u4ee5\u81ea\u52a8\u8bc6\u522b\u5f15\u7528\u7684\u751f\u547d\u5468\u671f\uff0c\u5224\u65ad\u60ac\u5782\u5f15\u7528\uff0c\u4f46\u662f\u8fd8\u6709\u4e00\u4e9b\u60c5\u51b5\u9700\u8981\u6211\u4eec\u4f7f\u7528\u751f\u547d\u5468\u671f\u6807\u6ce8\u6765\u544a\u8bc9\u7f16\u8bd1\u5668\u3002"}),"\n",(0,i.jsx)(e.p,{children:"\u751f\u547d\u5468\u671f\u6807\u6ce8\u8bed\u6cd5\n\u751f\u547d\u5468\u671f\u7684\u57fa\u672c\u6807\u8bb0\u662f 'a\uff0c\u5176\u4e2d a \u53ef\u4ee5\u662f\u4efb\u4f55\u6709\u6548\u7684 Rust \u6807\u8bc6\u7b26\u3002\u6b64\u6807\u8bb0\u7528\u4e8e\u6ce8\u89e3\u6709\u751f\u547d\u5468\u671f\u7684\u5143\u7d20\u3002\u6bd4\u5982\u5f15\u7528\u7c7b\u578b\u7684\u751f\u547d\u5468\u671f\uff0c\u5982 &'a T\u3002\u8fd9\u8868\u793a\u8fd9\u4e2a\u5f15\u7528\u7684\u751f\u547d\u5468\u671f\u81f3\u5c11\u548c 'a \u4e00\u6837\u957f\u3002"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-Rust",children:"fn longest<'a>(x: &'a str, y: &'a str) -> &'a str {\n    if x.len() > y.len() {\n        x\n    } else {\n        y\n    }\n}\n"})}),"\n",(0,i.jsx)(e.h5,{id:"static-1",children:"&\u2019static"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"&'static"})," \u5bf9\u4e8e\u751f\u547d\u5468\u671f\u6709\u7740\u975e\u5e38\u5f3a\u7684\u8981\u6c42\uff1a\u4e00\u4e2a\u5f15\u7528\u5fc5\u987b\u8981\u6d3b\u5f97\u8ddf\u5269\u4e0b\u7684\u7a0b\u5e8f\u4e00\u6837\u4e45\uff0c\u624d\u80fd\u88ab\u6807\u6ce8\u4e3a ",(0,i.jsx)(e.code,{children:"&'static"}),"\u3002"]}),"\n",(0,i.jsx)(e.h1,{id:"static-\u548c-t-static",children:(0,i.jsx)(e.a,{href:"https://course.rs/advance/lifetime/static.html#static-%E5%92%8C-t-static",children:"&'static \u548c T: 'static"})}),"\n",(0,i.jsxs)(e.p,{children:["Rust \u7684\u96be\u70b9\u4e4b\u4e00\u5c31\u5728\u4e8e\u5b83\u6709\u4e0d\u5c11\u5bb9\u6613\u6df7\u6dc6\u7684\u6982\u5ff5\uff0c\u4f8b\u5982 ",(0,i.jsx)(e.code,{children:"&str"})," \u3001",(0,i.jsx)(e.code,{children:"str"})," \u4e0e ",(0,i.jsx)(e.code,{children:"String"}),"\uff0c \u518d\u6bd4\u5982\u672c\u6587\u6807\u9898\u90a3\u4e24\u4f4d\u3002\u4e0d\u8fc7\u4e0e\u5b57\u7b26\u4e32\u4e5f\u6709\u4e0d\u540c\uff0c\u8fd9\u4e24\u4f4d\u5bf9\u4e8e\u666e\u901a\u7528\u6237\u6765\u8bf4\u5f80\u5f80\u662f\u65e0\u9700\u8fdb\u884c\u533a\u5206\u7684\uff0c\u4f46\u662f\u5f53\u5927\u5bb6\u60f3\u8981\u6df1\u5165\u5b66\u4e60\u6216\u4f7f\u7528 Rust \u65f6\uff0c\u5b83\u4eec\u5c31\u4f1a\u6210\u4e3a\u6210\u529f\u8def\u4e0a\u7684\u62e6\u8def\u864e\u4e86\u3002"]}),"\n",(0,i.jsx)(e.p,{children:"\u4e0e\u751f\u547d\u5468\u671f\u7684\u5176\u5b83\u7ae0\u8282\u4e0d\u540c\uff0c\u672c\u6587\u77ed\u5c0f\u7cbe\u608d\uff0c\u9605\u8bfb\u8fc7\u7a0b\u53ef\u8c13\u76f8\u5f53\u8f7b\u677e\u6109\u5feb\uff0c\u8bdd\u4e0d\u591a\u8bf4\uff0clet's go\u3002"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"'static"})," \u5728 Rust \u4e2d\u662f\u76f8\u5f53\u5e38\u89c1\u7684\uff0c\u4f8b\u5982\u5b57\u7b26\u4e32\u5b57\u9762\u503c\u5c31\u5177\u6709 ",(0,i.jsx)(e.code,{children:"'static"})," \u751f\u547d\u5468\u671f:"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-Rust",children:'fn main() {\n  let mark_twain: &str = "Samuel Clemens";\n  print_author(mark_twain);\n}\nfn print_author(author: &\'static str) {\n  println!("{}", author);\n}\n'})}),"\n",(0,i.jsxs)(e.p,{children:["\u9664\u6b64\u4e4b\u5916\uff0c\u7279\u5f81\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u4e5f\u662f ",(0,i.jsx)(e.code,{children:"'static"}),"\uff0c\u4f8b\u5982",(0,i.jsx)(e.a,{href:"https://course.rs/compiler/fight-with-compiler/lifetime/closure-with-static.html#%E7%89%B9%E5%BE%81%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F",children:"\u8fd9\u91cc"}),"\u6240\u63d0\u5230\u7684\u3002"]}),"\n",(0,i.jsxs)(e.p,{children:["\u9664\u4e86 ",(0,i.jsx)(e.code,{children:"&'static"})," \u7684\u7528\u6cd5\u5916\uff0c\u6211\u4eec\u5728\u53e6\u5916\u4e00\u79cd\u573a\u666f\u4e2d\u4e5f\u53ef\u4ee5\u89c1\u5230 ",(0,i.jsx)(e.code,{children:"'static"})," \u7684\u4f7f\u7528:"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-Rust",children:'use std::fmt::Display;\nfn main() {\n    let mark_twain = "Samuel Clemens";\n    print(&mark_twain);\n}\n\nfn print<T: Display + \'static>(message: &T) {\n    println!("{}", message);\n}\n'})}),"\n",(0,i.jsxs)(e.p,{children:["\u5728\u8fd9\u91cc\uff0c\u5f88\u660e\u663e ",(0,i.jsx)(e.code,{children:"'static"})," \u662f\u4f5c\u4e3a\u751f\u547d\u5468\u671f\u7ea6\u675f\u6765\u4f7f\u7528\u4e86\u3002 ",(0,i.jsxs)(e.strong,{children:["\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c ",(0,i.jsx)(e.code,{children:"&'static"})," \u548c ",(0,i.jsx)(e.code,{children:"T: 'static"})," \u7684\u7528\u6cd5\u5230\u5e95\u6709\u4f55\u533a\u522b\uff1f"]})]}),"\n",(0,i.jsx)(e.h2,{id:"statichttpscoursersadvancelifetimestatichtmlstatic",children:(0,i.jsx)(e.code,{children:"[&'static](https://course.rs/advance/lifetime/static.html#static)"})}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"&'static"})," \u5bf9\u4e8e\u751f\u547d\u5468\u671f\u6709\u7740\u975e\u5e38\u5f3a\u7684\u8981\u6c42\uff1a\u4e00\u4e2a\u5f15\u7528\u5fc5\u987b\u8981\u6d3b\u5f97\u8ddf\u5269\u4e0b\u7684\u7a0b\u5e8f\u4e00\u6837\u4e45\uff0c\u624d\u80fd\u88ab\u6807\u6ce8\u4e3a ",(0,i.jsx)(e.code,{children:"&'static"}),"\u3002"]}),"\n",(0,i.jsxs)(e.p,{children:["\u5bf9\u4e8e\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u6765\u8bf4\uff0c\u5b83\u76f4\u63a5\u88ab\u6253\u5305\u5230\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\uff0c\u6c38\u8fdc\u4e0d\u4f1a\u88ab ",(0,i.jsx)(e.code,{children:"drop"}),"\uff0c\u56e0\u6b64\u5b83\u80fd\u8ddf\u7a0b\u5e8f\u6d3b\u5f97\u4e00\u6837\u4e45\uff0c\u81ea\u7136\u5b83\u7684\u751f\u547d\u5468\u671f\u662f ",(0,i.jsx)(e.code,{children:"'static"}),"\u3002"]}),"\n",(0,i.jsxs)(e.p,{children:["\u4f46\u662f\uff0c",(0,i.jsxs)(e.strong,{children:[(0,i.jsx)(e.code,{children:"&'static"})," \u751f\u547d\u5468\u671f\u9488\u5bf9\u7684\u4ec5\u4ec5\u662f\u5f15\u7528\uff0c\u800c\u4e0d\u662f\u6301\u6709\u8be5\u5f15\u7528\u7684\u53d8\u91cf\uff0c\u5bf9\u4e8e\u53d8\u91cf\u6765\u8bf4\uff0c\u8fd8\u662f\u8981\u9075\u5faa\u76f8\u5e94\u7684\u4f5c\u7528\u57df\u89c4\u5219"]})," :"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-Rust",children:'use std::{slice::from_raw_parts, str::from_utf8_unchecked};\n\nfn get_memory_location() -> (usize, usize) {\n  // \u201cHello World\u201d \u662f\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\uff0c\u56e0\u6b64\u5b83\u7684\u751f\u547d\u5468\u671f\u662f `\'static`.\n  // \u4f46\u6301\u6709\u5b83\u7684\u53d8\u91cf `string` \u7684\u751f\u547d\u5468\u671f\u5c31\u4e0d\u4e00\u6837\u4e86\uff0c\u5b83\u5b8c\u5168\u53d6\u51b3\u4e8e\u53d8\u91cf\u4f5c\u7528\u57df\uff0c\u5bf9\u4e8e\u8be5\u4f8b\u5b50\u6765\u8bf4\uff0c\u4e5f\u5c31\u662f\u5f53\u524d\u7684\u51fd\u6570\u8303\u56f4\n  let string = "Hello World!";\n  let pointer = string.as_ptr() as usize;\n  let length = string.len();\n  (pointer, length)\n  // `string` \u5728\u8fd9\u91cc\u88ab drop \u91ca\u653e\n  // \u867d\u7136\u53d8\u91cf\u88ab\u91ca\u653e\uff0c\u65e0\u6cd5\u518d\u88ab\u8bbf\u95ee\uff0c\u4f46\u662f\u6570\u636e\u4f9d\u7136\u8fd8\u4f1a\u7ee7\u7eed\u5b58\u6d3b\n}\n\nfn get_str_at_location(pointer: usize, length: usize) -> &\'static str {\n  // \u4f7f\u7528\u88f8\u6307\u9488\u9700\u8981 `unsafe{}` \u8bed\u53e5\u5757\n  unsafe { from_utf8_unchecked(from_raw_parts(pointer as *const u8, length)) }\n}\n\nfn main() {\n  let (pointer, length) = get_memory_location();\n  let message = get_str_at_location(pointer, length);\n  println!(\n    "The {} bytes at 0x{:X} stored: {}",\n    length, pointer, message\n  );\n  // \u5982\u679c\u5927\u5bb6\u60f3\u77e5\u9053\u4e3a\u4f55\u5904\u7406\u88f8\u6307\u9488\u9700\u8981 `unsafe`\uff0c\u53ef\u4ee5\u8bd5\u7740\u53cd\u6ce8\u91ca\u4ee5\u4e0b\u4ee3\u7801\n  // let message = get_str_at_location(1000, 10);\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:"\u4e0a\u9762\u4ee3\u7801\u6709\u4e24\u70b9\u503c\u5f97\u6ce8\u610f\uff1a"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"&'static"})," \u7684\u5f15\u7528\u786e\u5b9e\u53ef\u4ee5\u548c\u7a0b\u5e8f\u6d3b\u5f97\u4e00\u6837\u4e45\uff0c\u56e0\u4e3a\u6211\u4eec\u901a\u8fc7 ",(0,i.jsx)(e.code,{children:"get_str_at_location"})," \u51fd\u6570\u76f4\u63a5\u53d6\u5230\u4e86\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u6301\u6709 ",(0,i.jsx)(e.code,{children:"&'static"})," \u5f15\u7528\u7684\u53d8\u91cf\uff0c\u5b83\u7684\u751f\u547d\u5468\u671f\u53d7\u5230\u4f5c\u7528\u57df\u7684\u9650\u5236\uff0c\u5927\u5bb6\u52a1\u5fc5\u4e0d\u8981\u641e\u6df7\u4e86"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"t-statichttpscoursersadvancelifetimestatichtmlt-static",children:(0,i.jsx)(e.code,{children:"[T: 'static](https://course.rs/advance/lifetime/static.html#t-static)"})}),"\n",(0,i.jsx)(e.p,{children:"\u76f8\u6bd4\u8d77\u6765\uff0c\u8fd9\u79cd\u5f62\u5f0f\u7684\u7ea6\u675f\u5c31\u6709\u4e9b\u590d\u6742\u4e86\u3002"}),"\n",(0,i.jsxs)(e.p,{children:["\u9996\u5148\uff0c\u5728\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c",(0,i.jsx)(e.code,{children:"T: 'static"})," \u4e0e ",(0,i.jsx)(e.code,{children:"&'static"})," \u6709\u76f8\u540c\u7684\u7ea6\u675f\uff1a",(0,i.jsx)(e.code,{children:"T"})," \u5fc5\u987b\u6d3b\u5f97\u548c\u7a0b\u5e8f\u4e00\u6837\u4e45\u3002"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-Rust",children:"use std::fmt::Debug;\n\nfn print_it<T: Debug + 'static>( input: T) {\n    println!( \"'static value passed in is: {:?}\", input );\n}\n\nfn print_it1( input: impl Debug + 'static ) {\n    println!( \"'static value passed in is: {:?}\", input );\n}\n\n\n\nfn main() {\n    let i = 5;\n\n    print_it(&i);\n    print_it1(&i);\n}\n"})}),"\n",(0,i.jsxs)(e.p,{children:["\u4ee5\u4e0a\u4ee3\u7801\u4f1a\u62a5\u9519\uff0c\u539f\u56e0\u5f88\u7b80\u5355: ",(0,i.jsx)(e.code,{children:"&i"})," \u7684\u751f\u547d\u5468\u671f\u65e0\u6cd5\u6ee1\u8db3 ",(0,i.jsx)(e.code,{children:"'static"})," \u7684\u7ea6\u675f\uff0c\u5982\u679c\u5927\u5bb6\u5c06 ",(0,i.jsx)(e.code,{children:"i"})," \u4fee\u6539\u4e3a\u5e38\u91cf\uff0c\u90a3\u81ea\u7136\u4e00\u5207 OK\u3002"]}),"\n",(0,i.jsxs)(e.p,{children:["\u89c1\u8bc1\u5947\u8ff9\u7684\u65f6\u5019\uff0c\u8bf7\u4e0d\u8981\u7728\u773c\uff0c\u73b0\u5728\u6211\u4eec\u6765\u7a0d\u5fae\u4fee\u6539\u4e0b ",(0,i.jsx)(e.code,{children:"print_it"})," \u51fd\u6570:"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-Rust",children:"use std::fmt::Debug;\n\nfn print_it<T: Debug + 'static>( input: &T) {\n    println!( \"'static value passed in is: {:?}\", input );\n}\n\nfn main() {\n    let i = 5;\n\n    print_it(&i);\n}\n"})}),"\n",(0,i.jsxs)(e.p,{children:["\u8fd9\u6bb5\u4ee3\u7801\u7adf\u7136\u4e0d\u62a5\u9519\u4e86\uff01\u539f\u56e0\u5728\u4e8e\u6211\u4eec\u7ea6\u675f\u7684\u662f ",(0,i.jsx)(e.code,{children:"T"}),"\uff0c\u4f46\u662f\u4f7f\u7528\u7684\u5374\u662f\u5b83\u7684\u5f15\u7528 ",(0,i.jsx)(e.code,{children:"&T"}),"\uff0c\u6362\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u6839\u672c\u6ca1\u6709\u76f4\u63a5\u4f7f\u7528 ",(0,i.jsx)(e.code,{children:"T"}),"\uff0c\u56e0\u6b64\u7f16\u8bd1\u5668\u5c31\u6ca1\u6709\u53bb\u68c0\u67e5 ",(0,i.jsx)(e.code,{children:"T"})," \u7684\u751f\u547d\u5468\u671f\u7ea6\u675f\uff01\u5b83\u53ea\u8981\u786e\u4fdd ",(0,i.jsx)(e.code,{children:"&T"})," \u7684\u751f\u547d\u5468\u671f\u7b26\u5408\u89c4\u5219\u5373\u53ef\uff0c\u5728\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u5b83\u81ea\u7136\u662f\u7b26\u5408\u7684\u3002"]}),"\n",(0,i.jsx)(e.p,{children:"\u518d\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-Rust",children:'use std::fmt::Display;\n\nfn main() {\n  let r1;\n  let r2;\n  {\n    static STATIC_EXAMPLE: i32 = 42;\n    r1 = &STATIC_EXAMPLE;\n    let x = "&\'static str";\n    r2 = x;\n    // r1 \u548c r2 \u6301\u6709\u7684\u6570\u636e\u90fd\u662f \'static \u7684\uff0c\u56e0\u6b64\u5728\u82b1\u62ec\u53f7\u7ed3\u675f\u540e\uff0c\u5e76\u4e0d\u4f1a\u88ab\u91ca\u653e\n  }\n\n  println!("&\'static i32: {}", r1); // -> 42\n  println!("&\'static str: {}", r2); // -> &\'static str\n\n  let r3: &str;\n\n  {\n    let s1 = "String".to_string();\n\n    // s1 \u867d\u7136\u6ca1\u6709 \'static \u751f\u547d\u5468\u671f\uff0c\u4f46\u662f\u5b83\u4f9d\u7136\u53ef\u4ee5\u6ee1\u8db3 T: \'static \u7684\u7ea6\u675f\n    // \u5145\u5206\u8bf4\u660e\u8fd9\u4e2a\u7ea6\u675f\u662f\u591a\u4e48\u7684\u5f31\u3002\u3002\n    static_bound(&s1);\n\n    // s1 \u662f String \u7c7b\u578b\uff0c\u6ca1\u6709 \'static \u7684\u751f\u547d\u5468\u671f\uff0c\u56e0\u6b64\u4e0b\u9762\u4ee3\u7801\u4f1a\u62a5\u9519\n    r3 = &s1;\n\n    // s1 \u5728\u8fd9\u91cc\u88ab drop\n  }\n  println!("{}", r3);\n}\n\nfn static_bound<T: Display + \'static>(t: &T) {\n  println!("{}", t);\n}\n'})}),"\n",(0,i.jsx)(e.h2,{id:"static-\u5230\u5e95\u9488\u5bf9\u8c01",children:(0,i.jsx)(e.a,{href:"https://course.rs/advance/lifetime/static.html#static-%E5%88%B0%E5%BA%95%E9%92%88%E5%AF%B9%E8%B0%81",children:"static \u5230\u5e95\u9488\u5bf9\u8c01\uff1f"})}),"\n",(0,i.jsxs)(e.p,{children:["\u5927\u5bb6\u6709\u6ca1\u6709\u60f3\u8fc7\uff0c\u5230\u5e95\u662f ",(0,i.jsx)(e.code,{children:"&'static"})," \u8fd9\u4e2a\u5f15\u7528\u8fd8\u662f\u8be5\u5f15\u7528\u6307\u5411\u7684\u6570\u636e\u6d3b\u5f97\u8ddf\u7a0b\u5e8f\u4e00\u6837\u4e45\u5462\uff1f"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"\u7b54\u6848\u662f\u5f15\u7528\u6307\u5411\u7684\u6570\u636e"}),"\uff0c\u800c\u5f15\u7528\u672c\u8eab\u662f\u8981\u9075\u5faa\u5176\u4f5c\u7528\u57df\u8303\u56f4\u7684\uff0c\u6211\u4eec\u6765\u7b80\u5355\u9a8c\u8bc1\u4e0b\uff1a"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-Rust",children:'fn main() {\n    {\n        let static_string = "I\'m in read-only memory";\n        println!("static_string: {}", static_string);\n\n        // \u5f53 `static_string` \u8d85\u51fa\u4f5c\u7528\u57df\u65f6\uff0c\u8be5\u5f15\u7528\u4e0d\u80fd\u518d\u88ab\u4f7f\u7528\uff0c\u4f46\u662f\u6570\u636e\u4f9d\u7136\u4f1a\u5b58\u5728\u4e8e binary \u6240\u5360\u7528\u7684\u5185\u5b58\u4e2d\n    }\n\n    println!("static_string reference remains alive: {}", static_string);\n}\n'})}),"\n",(0,i.jsxs)(e.p,{children:['\u4ee5\u4e0a\u4ee3\u7801\u4e0d\u51fa\u6240\u6599\u4f1a\u62a5\u9519\uff0c\u539f\u56e0\u5728\u4e8e\u867d\u7136\u5b57\u7b26\u4e32\u5b57\u9762\u91cf "I\'m in read-only memory" \u7684\u751f\u547d\u5468\u671f\u662f ',(0,i.jsx)(e.code,{children:"'static"}),"\uff0c\u4f46\u662f\u6301\u6709\u5b83\u7684\u5f15\u7528\u5e76\u4e0d\u662f\uff0c\u5b83\u7684\u4f5c\u7528\u57df\u5728\u5185\u90e8\u82b1\u62ec\u53f7 ",(0,i.jsx)(e.code,{children:"}"})," \u5904\u5c31\u7ed3\u675f\u4e86\u3002"]}),"\n",(0,i.jsx)(e.h2,{id:"\u8bfe\u540e\u7ec3\u4e60",children:(0,i.jsx)(e.a,{href:"https://course.rs/advance/lifetime/static.html#%E8%AF%BE%E5%90%8E%E7%BB%83%E4%B9%A0",children:"\u8bfe\u540e\u7ec3\u4e60"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"https://zh.practice.rs/lifetime/static.html",children:"Rust By Practice"}),"\uff0c\u652f\u6301\u4ee3\u7801\u5728\u7ebf\u7f16\u8f91\u548c\u8fd0\u884c\uff0c\u5e76\u63d0\u4f9b\u8be6\u7ec6\u7684\u4e60\u9898\u89e3\u7b54\u3002\uff08\u672c\u8282\u6682\u65e0\u4e60\u9898\u89e3\u7b54\uff09"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"\u603b\u7ed3",children:(0,i.jsx)(e.a,{href:"https://course.rs/advance/lifetime/static.html#%E6%80%BB%E7%BB%93",children:"\u603b\u7ed3"})}),"\n",(0,i.jsxs)(e.p,{children:["\u603b\u4e4b\uff0c ",(0,i.jsx)(e.code,{children:"&'static"})," \u548c ",(0,i.jsx)(e.code,{children:"T: 'static"})," \u5927\u4f53\u4e0a\u76f8\u4f3c\uff0c\u76f8\u6bd4\u8d77\u6765\uff0c\u540e\u8005\u7684\u4f7f\u7528\u5f62\u5f0f\u4f1a\u66f4\u52a0\u590d\u6742\u4e00\u4e9b\u3002"]}),"\n",(0,i.jsxs)(e.p,{children:["\u81f3\u6b64\uff0c\u76f8\u4fe1\u5927\u5bb6\u5bf9\u4e8e ",(0,i.jsx)(e.code,{children:"'static"})," \u548c ",(0,i.jsx)(e.code,{children:"T: 'static"})," \u4e5f\u6709\u4e86\u6e05\u6670\u7684\u7406\u89e3\uff0c\u90a3\u4e48\u6211\u4eec\u5e94\u8be5\u5982\u4f55\u4f7f\u7528\u5b83\u4eec\u5462\uff1f"]}),"\n",(0,i.jsx)(e.p,{children:"\u4f5c\u4e3a\u7ecf\u9a8c\u4e4b\u8c08\uff0c\u53ef\u4ee5\u8fd9\u4e48\u6765:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u5982\u679c\u4f60\u9700\u8981\u6dfb\u52a0 ",(0,i.jsx)(e.code,{children:"&'static"})," \u6765\u8ba9\u4ee3\u7801\u5de5\u4f5c\uff0c\u90a3\u5f88\u53ef\u80fd\u662f\u8bbe\u8ba1\u4e0a\u51fa\u95ee\u9898\u4e86"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["\u5982\u679c\u4f60\u5e0c\u671b\u6ee1\u8db3\u548c\u53d6\u60a6\u7f16\u8bd1\u5668\uff0c\u90a3\u5c31\u4f7f\u7528 ",(0,i.jsx)(e.code,{children:"T: 'static"}),"\uff0c\u5f88\u591a\u65f6\u5019\u5b83\u90fd\u80fd\u89e3\u51b3\u95ee\u9898"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsxs)(e.p,{children:["\u4e00\u4e2a\u5c0f\u77e5\u8bc6\uff0c\u5728 Rust \u6807\u51c6\u5e93\u4e2d\uff0c\u6709 48 \u5904\u7528\u5230\u4e86 &'static \uff0c112 \u5904\u7528\u5230\u4e86 ",(0,i.jsx)(e.code,{children:"T: 'static"})," \uff0c\u770b\u6765\u53d6\u60a6\u7f16\u8bd1\u5668\u4e0d\u4ec5\u4ec5\u662f\u83dc\u9e1f\u9700\u8981\u7684\uff0c\u9ad8\u624b\u4e5f\u7ecf\u5e38\u7528\u5230 :)"]}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>l});var i=t(6540);const s={},r=i.createContext(s);function a(n){const e=i.useContext(r);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:a(n.components),i.createElement(r.Provider,{value:e},n.children)}}}]);