"use strict";(self.webpackChunkwangenius=self.webpackChunkwangenius||[]).push([[7845],{205:(r,n,e)=>{e.r(n),e.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>u,frontMatter:()=>c,metadata:()=>s,toc:()=>d});var t=e(4848),o=e(8453);const c={title:"\u521b\u5efa\u578b\u6a21\u5f0f",sidebar_position:4,slug:"\u521b\u5efa\u578b\u6a21\u5f0f"},i="\u521b\u5efa\u578b\u6a21\u5f0f",s={id:"lang/cpp/\u9762\u5411\u5bf9\u8c61/\u521b\u5efa\u578b\u6a21\u5f0f",title:"\u521b\u5efa\u578b\u6a21\u5f0f",description:"\u5355\u4f8b\u6a21\u5f0f",source:"@site/docs/lang/cpp/\u9762\u5411\u5bf9\u8c61/\u521b\u5efa\u578b\u6a21\u5f0f.mdx",sourceDirName:"lang/cpp/\u9762\u5411\u5bf9\u8c61",slug:"/lang/cpp/\u9762\u5411\u5bf9\u8c61/\u521b\u5efa\u578b\u6a21\u5f0f",permalink:"/mainpage/docs/lang/cpp/\u9762\u5411\u5bf9\u8c61/\u521b\u5efa\u578b\u6a21\u5f0f",draft:!1,unlisted:!1,editUrl:"https://github.com/wangenius/mainpage/tree/master/docs/lang/cpp/\u9762\u5411\u5bf9\u8c61/\u521b\u5efa\u578b\u6a21\u5f0f.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"\u521b\u5efa\u578b\u6a21\u5f0f",sidebar_position:4,slug:"\u521b\u5efa\u578b\u6a21\u5f0f"},sidebar:"cpp",previous:{title:"\u8bbe\u8ba1\u6a21\u5f0f",permalink:"/mainpage/docs/lang/cpp/\u9762\u5411\u5bf9\u8c61/\u8bbe\u8ba1\u6a21\u5f0f"},next:{title:"\u7ed3\u6784\u578b\u6a21\u5f0f",permalink:"/mainpage/docs/lang/cpp/\u9762\u5411\u5bf9\u8c61/\u7ed3\u6784\u578b\u6a21\u5f0f"}},a={},d=[{value:"\u5355\u4f8b\u6a21\u5f0f",id:"\u5355\u4f8b\u6a21\u5f0f",level:2},{value:"\u539f\u578b\u6a21\u5f0f",id:"\u539f\u578b\u6a21\u5f0f",level:2},{value:"\u5de5\u5382\u6a21\u5f0f",id:"\u5de5\u5382\u6a21\u5f0f",level:2},{value:"\u5b9e\u73b0",id:"\u5b9e\u73b0",level:4},{value:"\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f",id:"\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f",level:2},{value:"\u5efa\u9020\u8005\u6a21\u5f0f",id:"\u5efa\u9020\u8005\u6a21\u5f0f",level:2}];function l(r){const n={code:"code",h1:"h1",h2:"h2",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.R)(),...r.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"\u521b\u5efa\u578b\u6a21\u5f0f",children:"\u521b\u5efa\u578b\u6a21\u5f0f"}),"\n",(0,t.jsx)(n.h2,{id:"\u5355\u4f8b\u6a21\u5f0f",children:"\u5355\u4f8b\u6a21\u5f0f"}),"\n",(0,t.jsx)(n.p,{children:"\u786e\u4fdd\u4e00\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u5e76\u63d0\u4f9b\u8be5\u5b9e\u4f8b\u7684\u5168\u5c40\u8bbf\u95ee\u70b9\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u5b9e\u73b0\u65b9\u5f0f"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"\u4f7f\u7528\u4e00\u4e2a\u79c1\u6709\u6784\u9020\u51fd\u6570\u3001\u4e00\u4e2a\u79c1\u6709\u9759\u6001\u53d8\u91cf\u4ee5\u53ca\u4e00\u4e2a\u516c\u6709\u9759\u6001\u51fd\u6570\u6765\u5b9e\u73b0\u3002"}),"\n",(0,t.jsx)(n.li,{children:"\u79c1\u6709\u6784\u9020\u51fd\u6570\u4fdd\u8bc1\u4e86\u4e0d\u80fd\u901a\u8fc7\u6784\u9020\u51fd\u6570\u6765\u521b\u5efa\u5bf9\u8c61\u5b9e\u4f8b\uff0c\u53ea\u80fd\u901a\u8fc7\u516c\u6709\u9759\u6001\u51fd\u6570\u8fd4\u56de\u552f\u4e00\u7684\u79c1\u6709\u9759\u6001\u53d8\u91cf\u3002"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"\u5e94\u7528\u573a\u666f"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"\u67d0\u7c7b\u53ea\u8981\u6c42\u751f\u6210\u4e00\u4e2a\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u5982\u4e00\u4e2a\u73ed\u4e2d\u7684\u73ed\u957f\u3001\u6bcf\u4e2a\u4eba\u7684\u8eab\u4efd\u8bc1\u53f7\u7b49\u3002"}),"\n",(0,t.jsx)(n.li,{children:"\u5f53\u5bf9\u8c61\u9700\u8981\u88ab\u5171\u4eab\u7684\u573a\u5408\u3002\u7531\u4e8e\u5355\u4f8b\u6a21\u5f0f\u53ea\u5141\u8bb8\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5171\u4eab\u8be5\u5bf9\u8c61\u53ef\u4ee5\u8282\u7701\u5185\u5b58\uff0c\u5e76\u52a0\u5feb\u5bf9\u8c61\u8bbf\u95ee\u901f\u5ea6\u3002\u5982 Web \u4e2d\u7684\u914d\u7f6e\u5bf9\u8c61\u3001\u6570\u636e\u5e93\u7684\u8fde\u63a5\u6c60\u7b49\u3002"}),"\n",(0,t.jsx)(n.li,{children:"\u5f53\u67d0\u7c7b\u9700\u8981\u9891\u7e41\u5b9e\u4f8b\u5316\uff0c\u800c\u521b\u5efa\u7684\u5bf9\u8c61\u53c8\u9891\u7e41\u88ab\u9500\u6bc1\u7684\u65f6\u5019\uff0c\u5982\u591a\u7ebf\u7a0b\u7684\u7ebf\u7a0b\u6c60\u3001\u7f51\u7edc\u8fde\u63a5\u6c60\u7b49\u3002"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"\u5355\u4f8b\u6a21\u5f0f\u540c\u65f6\u89e3\u51b3\u4e86\u4e24\u4e2a\u95ee\u9898\uff0c \u6240\u4ee5\u8fdd\u53cd\u4e86\u5355\u4e00\u804c\u8d23\u539f\u5219\uff1a"}),"\n",(0,t.jsx)(n.p,{children:"\u4fdd\u8bc1\u4e00\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\u3002 \u4e3a\u4ec0\u4e48\u4f1a\u6709\u4eba\u60f3\u8981\u63a7\u5236\u4e00\u4e2a\u7c7b\u6240\u62e5\u6709\u7684\u5b9e\u4f8b\u6570\u91cf\uff1f \u6700\u5e38\u89c1\u7684\u539f\u56e0\u662f\u63a7\u5236\u67d0\u4e9b\u5171\u4eab\u8d44\u6e90 \uff08\u4f8b\u5982\u6570\u636e\u5e93\u6216\u6587\u4ef6\uff09 \u7684\u8bbf\u95ee\u6743\u9650\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u5b83\u7684\u8fd0\u4f5c\u65b9\u5f0f\u662f\u8fd9\u6837\u7684\uff1a \u5982\u679c\u4f60\u521b\u5efa\u4e86\u4e00\u4e2a\u5bf9\u8c61\uff0c \u540c\u65f6\u8fc7\u4e00\u4f1a\u513f\u540e\u4f60\u51b3\u5b9a\u518d\u521b\u5efa\u4e00\u4e2a\u65b0\u5bf9\u8c61\uff0c \u6b64\u65f6\u4f60\u4f1a\u83b7\u5f97\u4e4b\u524d\u5df2\u521b\u5efa\u7684\u5bf9\u8c61\uff0c \u800c\u4e0d\u662f\u4e00\u4e2a\u65b0\u5bf9\u8c61\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u6ce8\u610f\uff0c \u666e\u901a\u6784\u9020\u51fd\u6570\u65e0\u6cd5\u5b9e\u73b0\u4e0a\u8ff0\u884c\u4e3a\uff0c \u56e0\u4e3a\u6784\u9020\u51fd\u6570\u7684\u8bbe\u8ba1\u51b3\u5b9a\u4e86\u5b83\u5fc5\u987b\u603b\u662f\u8fd4\u56de\u4e00\u4e2a\u65b0\u5bf9\u8c61\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u4e3a\u8be5\u5b9e\u4f8b\u63d0\u4f9b\u4e00\u4e2a\u5168\u5c40\u8bbf\u95ee\u8282\u70b9\u3002 \u8fd8\u8bb0\u5f97\u4f60 \uff08\u597d\u5427\uff0c \u5176\u5b9e\u662f\u6211\u81ea\u5df1\uff09 \u7528\u8fc7\u7684\u90a3\u4e9b\u5b58\u50a8\u91cd\u8981\u5bf9\u8c61\u7684\u5168\u5c40\u53d8\u91cf\u5417\uff1f \u5b83\u4eec\u5728\u4f7f\u7528\u4e0a\u5341\u5206\u65b9\u4fbf\uff0c \u4f46\u540c\u65f6\u4e5f\u975e\u5e38\u4e0d\u5b89\u5168\uff0c \u56e0\u4e3a\u4efb\u4f55\u4ee3\u7801\u90fd\u6709\u53ef\u80fd\u8986\u76d6\u6389\u90a3\u4e9b\u53d8\u91cf\u7684\u5185\u5bb9\uff0c \u4ece\u800c\u5f15\u53d1\u7a0b\u5e8f\u5d29\u6e83\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u548c\u5168\u5c40\u53d8\u91cf\u4e00\u6837\uff0c \u5355\u4f8b\u6a21\u5f0f\u4e5f\u5141\u8bb8\u5728\u7a0b\u5e8f\u7684\u4efb\u4f55\u5730\u65b9\u8bbf\u95ee\u7279\u5b9a\u5bf9\u8c61\u3002 \u4f46\u662f\u5b83\u53ef\u4ee5\u4fdd\u62a4\u8be5\u5b9e\u4f8b\u4e0d\u88ab\u5176\u4ed6\u4ee3\u7801\u8986\u76d6\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u8fd8\u6709\u4e00\u70b9\uff1a \u4f60\u4e0d\u4f1a\u5e0c\u671b\u89e3\u51b3\u540c\u4e00\u4e2a\u95ee\u9898\u7684\u4ee3\u7801\u5206\u6563\u5728\u7a0b\u5e8f\u5404\u5904\u7684\u3002 \u56e0\u6b64\u66f4\u597d\u7684\u65b9\u5f0f\u662f\u5c06\u5176\u653e\u5728\u540c\u4e00\u4e2a\u7c7b\u4e2d\uff0c \u7279\u522b\u662f\u5f53\u5176\u4ed6\u4ee3\u7801\u5df2\u7ecf\u4f9d\u8d56\u8fd9\u4e2a\u7c7b\u65f6\u66f4\u5e94\u8be5\u5982\u6b64\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u5982\u4eca\uff0c \u5355\u4f8b\u6a21\u5f0f\u5df2\u7ecf\u53d8\u5f97\u975e\u5e38\u6d41\u884c\uff0c \u4ee5\u81f3\u4e8e\u4eba\u4eec\u4f1a\u5c06\u53ea\u89e3\u51b3\u4e0a\u6587\u63cf\u8ff0\u4e2d\u4efb\u610f\u4e00\u4e2a\u95ee\u9898\u7684\u4e1c\u897f\u79f0\u4e3a\u5355\u4f8b\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u4e3a\u8be5\u5b9e\u4f8b\u63d0\u4f9b\u4e00\u4e2a\u5168\u5c40\u8bbf\u95ee\u8282\u70b9\u3002 \u8fd8\u8bb0\u5f97\u4f60 \uff08\u597d\u5427\uff0c \u5176\u5b9e\u662f\u6211\u81ea\u5df1\uff09 \u7528\u8fc7\u7684\u90a3\u4e9b\u5b58\u50a8\u91cd\u8981\u5bf9\u8c61\u7684\u5168\u5c40\u53d8\u91cf\u5417\uff1f \u5b83\u4eec\u5728\u4f7f\u7528\u4e0a\u5341\u5206\u65b9\u4fbf\uff0c \u4f46\u540c\u65f6\u4e5f\u975e\u5e38\u4e0d\u5b89\u5168\uff0c \u56e0\u4e3a\u4efb\u4f55\u4ee3\u7801\u90fd\u6709\u53ef\u80fd\u8986\u76d6\u6389\u90a3\u4e9b\u53d8\u91cf\u7684\u5185\u5bb9\uff0c \u4ece\u800c\u5f15\u53d1\u7a0b\u5e8f\u5d29\u6e83\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u548c\u5168\u5c40\u53d8\u91cf\u4e00\u6837\uff0c \u5355\u4f8b\u6a21\u5f0f\u4e5f\u5141\u8bb8\u5728\u7a0b\u5e8f\u7684\u4efb\u4f55\u5730\u65b9\u8bbf\u95ee\u7279\u5b9a\u5bf9\u8c61\u3002 \u4f46\u662f\u5b83\u53ef\u4ee5\u4fdd\u62a4\u8be5\u5b9e\u4f8b\u4e0d\u88ab\u5176\u4ed6\u4ee3\u7801\u8986\u76d6\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u8fd8\u6709\u4e00\u70b9\uff1a \u4f60\u4e0d\u4f1a\u5e0c\u671b\u89e3\u51b3\u540c\u4e00\u4e2a\u95ee\u9898\u7684\u4ee3\u7801\u5206\u6563\u5728\u7a0b\u5e8f\u5404\u5904\u7684\u3002 \u56e0\u6b64\u66f4\u597d\u7684\u65b9\u5f0f\u662f\u5c06\u5176\u653e\u5728\u540c\u4e00\u4e2a\u7c7b\u4e2d\uff0c \u7279\u522b\u662f\u5f53\u5176\u4ed6\u4ee3\u7801\u5df2\u7ecf\u4f9d\u8d56\u8fd9\u4e2a\u7c7b\u65f6\u66f4\u5e94\u8be5\u5982\u6b64\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u5982\u4eca\uff0c \u5355\u4f8b\u6a21\u5f0f\u5df2\u7ecf\u53d8\u5f97\u975e\u5e38\u6d41\u884c\uff0c \u4ee5\u81f3\u4e8e\u4eba\u4eec\u4f1a\u5c06\u53ea\u89e3\u51b3\u4e0a\u6587\u63cf\u8ff0\u4e2d\u4efb\u610f\u4e00\u4e2a\u95ee\u9898\u7684\u4e1c\u897f\u79f0\u4e3a\u5355\u4f8b\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",metastring:"showLineNumbers",children:'#pragma once\r\n#include <string>\r\n#include <mutex>\r\n\r\n/// @brief \u61d2\u6c49\u5f0f\u5355\u4f8b. \u7c7b\u52a0\u8f7d\u65f6\u6ca1\u6709\u751f\u6210\u5355\u4f8b, \u7b2c\u4e00\u6b21\u8c03\u7528 getInstance \u65b9\u6cd5\u65f6\u624d\u53bb\u521b\u5efa\r\nclass LazySingleton {\r\npublic:\r\n    Singleton(LazySingleton &other) = delete;\r\n    void operator=(const LazySingleton &) = delete;\r\n    static LazySingleton* getInstance(const std::string& value) { \r\n        if (!instance_) {\r\n            std::unique_lock<std::mutex> lock(mutex_);\r\n            if (!instance_) instance_ = new LazySingleton(value);    // \u53ef\u80fd\u51fa\u73b0\u4e24\u4e2a\u7ebf\u7a0b\u90fd\u6267\u884c\u4e86\u7b2c\u4e00\u6b21 if \u8bed\u53e5\r\n        }\r\n        return instance_; \r\n    }\r\n    /**\r\n     * Finally, any singleton should define some business logic, which can be\r\n     * executed on its instance.\r\n     */\r\n    void SomeBusinessLogic()\r\n    {\r\n        // ...\r\n    }\r\n\r\nprotected:\r\n    LazySingleton(const std::string value): value_(value){}\r\n    ~LazySingleton() {}\r\n    std::string value_;\r\n\r\nprivate:\r\n   // LazySingleton() {}; \u4e5f\u53ef\u4ee5\u7b80\u5355\u5c06\u9ed8\u8ba4\u7684\u6784\u9020\u51fd\u6570\u8bbe\u4e3a\u79c1\u6709\r\n    static LazySingleton* instance_; //\u9759\u6001\u6210\u5458\u5bf9\u8c61, \u6574\u4e2a\u7a0b\u5e8f\u53ea\u7ef4\u62a4\u4e00\u4e2a\r\n    static std::mutex mutex_;\r\n};\r\n\r\nvoid Thread1(){\r\n    // Following code emulates slow initialization.\r\n    std::this_thread::sleep_for(std::chrono::milliseconds(1000));\r\n    Singleton* singleton = Singleton::GetInstance("FOO");\r\n    std::cout << singleton->value() << "\\n";\r\n}\r\n\r\nvoid Thread2(){\r\n    // Following code emulates slow initialization.\r\n    std::this_thread::sleep_for(std::chrono::milliseconds(1000));\r\n    Singleton* singleton = Singleton::GetInstance("BAR");\r\n    std::cout << singleton->value() << "\\n";\r\n}\r\n\r\nint main()\r\n{   \r\n    std::cout <<"If you see the same value, then singleton was reused (yay!\\n" <<\r\n                "If you see different values, then 2 singletons were created (booo!!)\\n\\n" <<\r\n                "RESULT:\\n";   \r\n    std::thread t1(ThreadFoo);\r\n    std::thread t2(ThreadBar);\r\n    t1.join();\r\n    t2.join();\r\n    \r\n    return 0;\r\n}\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",metastring:'title="output"',children:"If you see the same value, then singleton was reused (yay!\r\nIf you see different values, then 2 singletons were created (booo!!)\r\n\r\nRESULT:\r\nFOO\r\nFOO\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"#pragma once\r\n\r\nnamespace singleton {\r\n    \r\n/// @brief \u997f\u6c49\u5f0f\u5355\u4f8b. \u7c7b\u4e00\u65e6\u52a0\u8f7d\u5c31\u521b\u5efa\u4e00\u4e2a\u5355\u4f8b\r\n/// \u4f18\u70b9: \u7ebf\u7a0b\u5b89\u5168\r\n/// \u7f3a\u70b9: \u4e22\u5931\u5ef6\u8fdf\u5b9e\u4f8b\u5316\u5e26\u6765\u7684\u8282\u7ea6\u8d44\u6e90\u7684\u597d\u5904\r\nclass HungrySingleton {\r\npublic:\r\n    HungrySingleton* getInstance() { return instance_; }\r\n\r\nprivate:\r\n    HungrySingleton() {}\r\n    static HungrySingleton* instance_;\r\n};\r\n\r\nHungrySingleton* HungrySingleton::instance_ = new HungrySingleton();\r\n\r\n} // namespace singleton\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\u539f\u578b\u6a21\u5f0f",children:"\u539f\u578b\u6a21\u5f0f"}),"\n",(0,t.jsx)(n.p,{children:"\u542b\u4e49"}),"\n",(0,t.jsx)(n.p,{children:"Prototype \u5c06\u4e00\u4e2a\u5bf9\u8c61\u4f5c\u4e3a\u539f\u578b\uff0c\u901a\u8fc7\u5bf9\u5176\u8fdb\u884c\u590d\u5236\u800c\u514b\u9686\u51fa\u591a\u4e2a\u548c\u539f\u578b\u7c7b\u4f3c\u7684\u65b0\u5b9e\u4f8b\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u590d\u5236\u4e00\u4e2a\u5bf9\u8c61\u5206\u4e3a\u6d45\u62f7\u8d1d\u548c\u6df1\u62f7\u8d1d:"}),"\n",(0,t.jsx)(n.p,{children:"\u6d45\u62f7\u8d1d[\u9ed8\u8ba4]: \u7ed9\u5bf9\u8c61\u4e2d\u7684\u6bcf\u4e2a\u6210\u5458\u53d8\u91cf\u8fdb\u884c\u590d\u5236\uff0c\u5c31\u662f\u628aA1\u7c7b\u4e2d\u7684\u53d8\u91cf\u76f4\u63a5\u8d4b\u7ed9A2\u7c7b\u4e2d\u53d8\u91cf\uff0c\u5c5e\u4e8e\u503c\u4f20\u9012\uff0c\u4f46\u662f\u6d89\u53ca\u5230\u6709new\u4e4b\u7c7b\u5185\u5b58\u5206\u914d\u7684\u5730\u65b9\uff0c\u4ed6\u4eec\u5374\u662f\u5171\u4eab\u5185\u5b58\u7684\u3002\r\n\u6df1\u62f7\u8d1d: \u4e0d\u4ec5\u4f7f\u7528\u503c\u4f20\u9012\uff0c\u800c\u662f\u8981\u6bcf\u4e2a\u53d8\u91cf\u90fd\u6709\u81ea\u5df1\u4e00\u4efd\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u4e92\u4e0d\u5e72\u6270\u3002\r\n\u5e94\u7528\u573a\u666f"}),"\n",(0,t.jsx)(n.p,{children:"\u5bf9\u8c61\u4e4b\u95f4\u76f8\u540c\u6216\u76f8\u4f3c\uff0c\u5373\u53ea\u662f\u4e2a\u522b\u7684\u51e0\u4e2a\u5c5e\u6027\u4e0d\u540c\u7684\u65f6\u5019\u3002\r\n\u5bf9\u8c61\u7684\u521b\u5efa\u8fc7\u7a0b\u6bd4\u8f83\u9ebb\u70e6\uff0c\u4f46\u590d\u5236\u6bd4\u8f83\u7b80\u5355\u7684\u65f6\u5019\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:'#pragma once\r\n#include <stdio.h>\r\n\r\n/// @brief \u9700\u8981\u4eceA\u7684\u5b9e\u4f8b\u5f97\u5230\u4e00\u4efd\u4e0eA\u5185\u5bb9\u76f8\u540c\uff0c\u4f46\u662f\u53c8\u4e92\u4e0d\u5e72\u6270\u7684\u5b9e\u4f8b\r\n\r\n/// @brief \u62bd\u8c61\u539f\u578b\u7c7b\r\nclass AbstractPrototype {\r\npublic:\r\n    AbstractPrototype() = default;\r\n\tvirtual ~AbstractPrototype() {}\r\n\tvirtual AbstractPrototype* clone() = 0;\r\n};\r\n\r\n/// @brief \u5177\u4f53\u539f\u578b\u7c7b\r\nclass ConcretePrototype : public AbstractPrototype {\r\npublic:\r\n\tConcretePrototype() = default;\r\n\t~ConcretePrototype() {}\r\n\tAbstractPrototype* clone() {\r\n        return new ConcretePrototype(*this);\r\n    }\r\n\r\nprivate:\r\n\tConcretePrototype(const ConcretePrototype& other) {\r\n        std::cout <<"ConcretePrototype copy construct!\\n";\r\n    }\r\n};\r\n\r\nvoid main() {\r\n    printf("-------------------- %s --------------------\\n", __FUNCTION__);\r\n    AbstractPrototype* ptr_a = new ConcretePrototype();\r\n    AbstractPrototype* ptr_b = ptr_a->clone();\r\n\r\n    delete ptr_a;\r\n    delete ptr_b;\r\n}\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",metastring:'title="output"',children:"-------------------- main --------------------\r\nConcretePrototype copy construct!\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\u5de5\u5382\u6a21\u5f0f",children:"\u5de5\u5382\u6a21\u5f0f"}),"\n",(0,t.jsx)(n.p,{children:"\u542b\u4e49"}),"\n",(0,t.jsx)(n.p,{children:"Factory Method \u5b9a\u4e49\u4e00\u4e2a\u7528\u4e8e\u521b\u5efa\u4ea7\u54c1\u7684\u63a5\u53e3\uff0c\u7531\u5b50\u7c7b\u51b3\u5b9a\u751f\u4ea7\u4ec0\u4e48\u4ea7\u54c1\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u4f18\u70b9:\r\n\u7528\u6237\u53ea\u9700\u8981\u77e5\u9053\u5177\u4f53\u5de5\u5382\u7684\u540d\u79f0\u5c31\u53ef\u5f97\u5230\u6240\u8981\u7684\u4ea7\u54c1\uff0c\u65e0\u987b\u77e5\u9053\u4ea7\u54c1\u7684\u5177\u4f53\u521b\u5efa\u8fc7\u7a0b\uff1b\r\n\u5728\u7cfb\u7edf\u589e\u52a0\u65b0\u7684\u4ea7\u54c1\u65f6\u53ea\u9700\u8981\u6dfb\u52a0\u5177\u4f53\u4ea7\u54c1\u7c7b\u548c\u5bf9\u5e94\u7684\u5177\u4f53\u5de5\u5382\u7c7b\uff0c\u65e0\u987b\u5bf9\u539f\u5de5\u5382\u8fdb\u884c\u4efb\u4f55\u4fee\u6539\uff0c\u6ee1\u8db3\u5f00\u95ed\u539f\u5219\uff1b\r\n\u7f3a\u70b9:\r\n\u6bcf\u589e\u52a0\u4e00\u4e2a\u4ea7\u54c1\u5c31\u8981\u589e\u52a0\u4e00\u4e2a\u5177\u4f53\u4ea7\u54c1\u7c7b\u548c\u4e00\u4e2a\u5bf9\u5e94\u7684\u5177\u4f53\u5de5\u5382\u7c7b\uff0c\u8fd9\u589e\u52a0\u4e86\u7cfb\u7edf\u7684\u590d\u6742\u5ea6\u3002\r\n\u5e94\u7528\u573a\u666f"}),"\n",(0,t.jsx)(n.p,{children:"\u5ba2\u6237\u53ea\u77e5\u9053\u521b\u5efa\u4ea7\u54c1\u7684\u5de5\u5382\u540d\uff0c\u800c\u4e0d\u77e5\u9053\u5177\u4f53\u7684\u4ea7\u54c1\u540d\u3002\r\n\u521b\u5efa\u5bf9\u8c61\u7684\u4efb\u52a1\u7531\u591a\u4e2a\u5177\u4f53\u5b50\u5de5\u5382\u4e2d\u7684\u67d0\u4e00\u4e2a\u5b8c\u6210\uff0c\u800c\u62bd\u8c61\u5de5\u5382\u53ea\u63d0\u4f9b\u521b\u5efa\u4ea7\u54c1\u7684\u63a5\u53e3\u3002\r\n\u5ba2\u6237\u4e0d\u5173\u5fc3\u521b\u5efa\u4ea7\u54c1\u7684\u7ec6\u8282\uff0c\u53ea\u5173\u5fc3\u4ea7\u54c1\u7684\u54c1\u724c\u3002\r\n\u6269\u5c55"}),"\n",(0,t.jsx)(n.p,{children:"\u5f53\u9700\u8981\u751f\u6210\u7684\u4ea7\u54c1\u4e0d\u591a\u4e14\u4e0d\u4f1a\u589e\u52a0\uff0c\u4e00\u4e2a\u5177\u4f53\u5de5\u5382\u7c7b\u5c31\u53ef\u4ee5\u5b8c\u6210\u4efb\u52a1\u65f6\uff0c\u53ef\u5220\u9664\u62bd\u8c61\u5de5\u5382\u7c7b\u3002\u8fd9\u65f6\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u5c06\u9000\u5316\u5230\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u662f\u4e00\u79cd\u521b\u5efa\u578b\u8bbe\u8ba1\u6a21\u5f0f\uff0c \u5176\u5728\u7236\u7c7b\u4e2d\u63d0\u4f9b\u4e00\u4e2a\u521b\u5efa\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c \u5141\u8bb8\u5b50\u7c7b\u51b3\u5b9a\u5b9e\u4f8b\u5316\u5bf9\u8c61\u7684\u7c7b\u578b\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u5efa\u8bae\u4f7f\u7528\u7279\u6b8a\u7684\u5de5\u5382\u65b9\u6cd5\u4ee3\u66ff\u5bf9\u4e8e\u5bf9\u8c61\u6784\u9020\u51fd\u6570\u7684\u76f4\u63a5\u8c03\u7528 \uff08\u5373\u4f7f\u7528 new\u8fd0\u7b97\u7b26\uff09\u3002 \u4e0d\u7528\u62c5\u5fc3\uff0c \u5bf9\u8c61\u4ecd\u5c06\u901a\u8fc7 new\u8fd0\u7b97\u7b26\u521b\u5efa\uff0c \u53ea\u662f\u8be5\u8fd0\u7b97\u7b26\u6539\u5728\u5de5\u5382\u65b9\u6cd5\u4e2d\u8c03\u7528\u7f62\u4e86\u3002 \u5de5\u5382\u65b9\u6cd5\u8fd4\u56de\u7684\u5bf9\u8c61\u901a\u5e38\u88ab\u79f0\u4f5c \u201c\u4ea7\u54c1\u201d\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u4e4d\u770b\u4e4b\u4e0b\uff0c \u8fd9\u79cd\u66f4\u6539\u53ef\u80fd\u6beb\u65e0\u610f\u4e49\uff1a \u6211\u4eec\u53ea\u662f\u6539\u53d8\u4e86\u7a0b\u5e8f\u4e2d\u8c03\u7528\u6784\u9020\u51fd\u6570\u7684\u4f4d\u7f6e\u800c\u5df2\u3002 \u4f46\u662f\uff0c \u4ed4\u7ec6\u60f3\u4e00\u4e0b\uff0c \u73b0\u5728\u4f60\u53ef\u4ee5\u5728\u5b50\u7c7b\u4e2d\u91cd\u5199\u5de5\u5382\u65b9\u6cd5\uff0c \u4ece\u800c\u6539\u53d8\u5176\u521b\u5efa\u4ea7\u54c1\u7684\u7c7b\u578b\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u4f46\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f:\u4ec5\u5f53\u8fd9\u4e9b\u4ea7\u54c1\u5177\u6709\u5171\u540c\u7684\u57fa\u7c7b\u6216\u8005\u63a5\u53e3\u65f6\uff0c \u5b50\u7c7b\u624d\u80fd\u8fd4\u56de\u4e0d\u540c\u7c7b\u578b\u7684\u4ea7\u54c1\uff0c \u540c\u65f6\u57fa\u7c7b\u4e2d\u7684\u5de5\u5382\u65b9\u6cd5\u8fd8\u5e94\u5c06\u5176\u8fd4\u56de\u7c7b\u578b\u58f0\u660e\u4e3a\u8fd9\u4e00\u5171\u6709\u63a5\u53e3\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u4e3e\u4f8b\u6765\u8bf4\uff0c\u5361\u8f66Truck\u548c \u8f6e\u8239Ship\u7c7b\u90fd\u5fc5\u987b\u5b9e\u73b0 \u8fd0\u8f93Transport\u63a5\u53e3\uff0c \u8be5\u63a5\u53e3\u58f0\u660e\u4e86\u4e00\u4e2a\u540d\u4e3a deliver\u4ea4\u4ed8\u7684\u65b9\u6cd5\u3002 \u6bcf\u4e2a\u7c7b\u90fd\u5c06\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u5b9e\u73b0\u8be5\u65b9\u6cd5\uff1a \u5361\u8f66\u8d70\u9646\u8def\u4ea4\u4ed8\u8d27\u7269\uff0c \u8f6e\u8239\u8d70\u6d77\u8def\u4ea4\u4ed8\u8d27\u7269\u3002 \u9646\u8def\u8fd0\u8f93RoadLogistics\u7c7b\u4e2d\u7684\u5de5\u5382\u65b9\u6cd5\u8fd4\u56de\u5361\u8f66\u5bf9\u8c61\uff0c \u800c \u6d77\u8def\u8fd0\u8f93SeaLogistics\u7c7b\u5219\u8fd4\u56de\u8f6e\u8239\u5bf9\u8c61\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u4f60\u53ef\u4ee5\u907f\u514d\u521b\u5efa\u8005\u548c\u5177\u4f53\u4ea7\u54c1\u4e4b\u95f4\u7684\u7d27\u5bc6\u8026\u5408\u3002\r\n\u5355\u4e00\u804c\u8d23\u539f\u5219\u3002 \u4f60\u53ef\u4ee5\u5c06\u4ea7\u54c1\u521b\u5efa\u4ee3\u7801\u653e\u5728\u7a0b\u5e8f\u7684\u5355\u4e00\u4f4d\u7f6e\uff0c \u4ece\u800c\u4f7f\u5f97\u4ee3\u7801\u66f4\u5bb9\u6613\u7ef4\u62a4\u3002\r\n\u5f00\u95ed\u539f\u5219\u3002 \u65e0\u9700\u66f4\u6539\u73b0\u6709\u5ba2\u6237\u7aef\u4ee3\u7801\uff0c \u4f60\u5c31\u53ef\u4ee5\u5728\u7a0b\u5e8f\u4e2d\u5f15\u5165\u65b0\u7684\u4ea7\u54c1\u7c7b\u578b\u3002"}),"\n",(0,t.jsx)(n.h4,{id:"\u5b9e\u73b0",children:"\u5b9e\u73b0"}),"\n",(0,t.jsx)(n.p,{children:"\u8ba9\u6240\u6709\u4ea7\u54c1\u90fd\u9075\u5faa\u540c\u4e00\u63a5\u53e3\u3002 \u8be5\u63a5\u53e3\u5fc5\u987b\u58f0\u660e\u5bf9\u6240\u6709\u4ea7\u54c1\u90fd\u6709\u610f\u4e49\u7684\u65b9\u6cd5\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u5728\u521b\u5efa\u7c7b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u7684\u5de5\u5382\u65b9\u6cd5\u3002 \u8be5\u65b9\u6cd5\u7684\u8fd4\u56de\u7c7b\u578b\u5fc5\u987b\u9075\u5faa\u901a\u7528\u7684\u4ea7\u54c1\u63a5\u53e3\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u5728\u521b\u5efa\u8005\u4ee3\u7801\u4e2d\u627e\u5230\u5bf9\u4e8e\u4ea7\u54c1\u6784\u9020\u51fd\u6570\u7684\u6240\u6709\u5f15\u7528\u3002 \u5c06\u5b83\u4eec\u4f9d\u6b21\u66ff\u6362\u4e3a\u5bf9\u4e8e\u5de5\u5382\u65b9\u6cd5\u7684\u8c03\u7528\uff0c \u540c\u65f6\u5c06\u521b\u5efa\u4ea7\u54c1\u7684\u4ee3\u7801\u79fb\u5165\u5de5\u5382\u65b9\u6cd5\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u4f60\u53ef\u80fd\u9700\u8981\u5728\u5de5\u5382\u65b9\u6cd5\u4e2d\u6dfb\u52a0\u4e34\u65f6\u53c2\u6570\u6765\u63a7\u5236\u8fd4\u56de\u7684\u4ea7\u54c1\u7c7b\u578b\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u5de5\u5382\u65b9\u6cd5\u7684\u4ee3\u7801\u770b\u4e0a\u53bb\u53ef\u80fd\u975e\u5e38\u7cdf\u7cd5\u3002 \u5176\u4e2d\u53ef\u80fd\u4f1a\u6709\u590d\u6742\u7684 switch\u5206\u652f\u8fd0\u7b97\u7b26\uff0c \u7528\u4e8e\u9009\u62e9\u5404\u79cd\u9700\u8981\u5b9e\u4f8b\u5316\u7684\u4ea7\u54c1\u7c7b\u3002 \u4f46\u662f\u4e0d\u8981\u62c5\u5fc3\uff0c \u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u73b0\u5728\uff0c \u4e3a\u5de5\u5382\u65b9\u6cd5\u4e2d\u7684\u6bcf\u79cd\u4ea7\u54c1\u7f16\u5199\u4e00\u4e2a\u521b\u5efa\u8005\u5b50\u7c7b\uff0c \u7136\u540e\u5728\u5b50\u7c7b\u4e2d\u91cd\u5199\u5de5\u5382\u65b9\u6cd5\uff0c \u5e76\u5c06\u57fa\u672c\u65b9\u6cd5\u4e2d\u7684\u76f8\u5173\u521b\u5efa\u4ee3\u7801\u79fb\u52a8\u5230\u5de5\u5382\u65b9\u6cd5\u4e2d\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u5982\u679c\u5e94\u7528\u4e2d\u7684\u4ea7\u54c1\u7c7b\u578b\u592a\u591a\uff0c \u90a3\u4e48\u4e3a\u6bcf\u4e2a\u4ea7\u54c1\u521b\u5efa\u5b50\u7c7b\u5e76\u65e0\u592a\u5927\u5fc5\u8981\uff0c \u8fd9\u65f6\u4f60\u4e5f\u53ef\u4ee5\u5728\u5b50\u7c7b\u4e2d\u590d\u7528\u57fa\u7c7b\u4e2d\u7684\u63a7\u5236\u53c2\u6570\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u4f8b\u5982\uff0c \u8bbe\u60f3\u4f60\u6709\u4ee5\u4e0b\u4e00\u4e9b\u5c42\u6b21\u7ed3\u6784\u7684\u7c7b\u3002 \u57fa\u7c7b \u90ae\u4ef6\u53ca\u5176\u5b50\u7c7b \u822a\u7a7a\u90ae\u4ef6\u548c \u9646\u8def\u90ae\u4ef6 \uff1b\u8fd0\u8f93\u53ca\u5176\u5b50\u7c7b \u98de\u673a, \u5361\u8f66\u548c \u706b\u8f66 \u3002\u822a\u7a7a\u90ae\u4ef6\u4ec5\u4f7f\u7528 \u98de\u673a\u5bf9\u8c61\uff0c \u800c \u9646\u8def\u90ae\u4ef6\u5219\u4f1a\u540c\u65f6\u4f7f\u7528 \u5361\u8f66\u548c \u706b\u8f66\u5bf9\u8c61\u3002 \u4f60\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u65b0\u7684\u5b50\u7c7b \uff08\u4f8b\u5982 \u706b\u8f66\u90ae\u4ef6 \uff09 \u6765\u5904\u7406\u8fd9\u4e24\u79cd\u60c5\u51b5\uff0c \u4f46\u662f\u8fd8\u6709\u5176\u4ed6\u53ef\u9009\u7684\u65b9\u6848\u3002 \u5ba2\u6237\u7aef\u4ee3\u7801\u53ef\u4ee5\u7ed9 \u9646\u8def\u90ae\u4ef6\u7c7b\u4f20\u9012\u4e00\u4e2a\u53c2\u6570\uff0c \u7528\u4e8e\u63a7\u5236\u5176\u5e0c\u671b\u83b7\u5f97\u7684\u4ea7\u54c1\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u5982\u679c\u4ee3\u7801\u7ecf\u8fc7\u4e0a\u8ff0\u79fb\u52a8\u540e\uff0c \u57fa\u7840\u5de5\u5382\u65b9\u6cd5\u4e2d\u5df2\u7ecf\u6ca1\u6709\u4efb\u4f55\u4ee3\u7801\uff0c \u4f60\u53ef\u4ee5\u5c06\u5176\u8f6c\u53d8\u4e3a\u62bd\u8c61\u7c7b\u3002 \u5982\u679c\u57fa\u7840\u5de5\u5382\u65b9\u6cd5\u4e2d\u8fd8\u6709\u5176\u4ed6\u8bed\u53e5\uff0c \u4f60\u53ef\u4ee5\u5c06\u5176\u8bbe\u7f6e\u4e3a\u8be5\u65b9\u6cd5\u7684\u9ed8\u8ba4\u884c\u4e3a\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:'class Product {\r\n public:\r\n  virtual ~Product() {}\r\n  virtual std::string Operation() const = 0;\r\n};\r\n\r\n/**\r\n * Concrete Products provide various implementations of the Product interface.\r\n */\r\nclass ConcreteProduct1 : public Product {\r\n public:\r\n  std::string Operation() const override {\r\n    return "{Result of the ConcreteProduct1}";\r\n  }\r\n};\r\nclass ConcreteProduct2 : public Product {\r\n public:\r\n  std::string Operation() const override {\r\n    return "{Result of the ConcreteProduct2}";\r\n  }\r\n};\r\n\r\n/**\r\n * The Creator class declares the factory method that is supposed to return an\r\n * object of a Product class. The Creator\'s subclasses usually provide the\r\n * implementation of this method.\r\n */\r\n\r\nclass Creator {\r\n  /**\r\n   * Note that the Creator may also provide some default implementation of the\r\n   * factory method.\r\n   */\r\n public:\r\n  virtual ~Creator(){};\r\n  virtual Product* FactoryMethod() const = 0;\r\n  /**\r\n   * Also note that, despite its name, the Creator\'s primary responsibility is\r\n   * not creating products. Usually, it contains some core business logic that\r\n   * relies on Product objects, returned by the factory method. Subclasses can\r\n   * indirectly change that business logic by overriding the factory method and\r\n   * returning a different type of product from it.\r\n   */\r\n\r\n  std::string SomeOperation() const {\r\n    // Call the factory method to create a Product object.\r\n    Product* product = this->FactoryMethod();\r\n    // Now, use the product.\r\n    std::string result = "Creator: The same creator\'s code has just worked with " + product->Operation();\r\n    delete product;\r\n    return result;\r\n  }\r\n};\r\n\r\n/**\r\n * Concrete Creators override the factory method in order to change the\r\n * resulting product\'s type.\r\n */\r\nclass ConcreteCreator1 : public Creator {\r\n  /**\r\n   * Note that the signature of the method still uses the abstract product type,\r\n   * even though the concrete product is actually returned from the method. This\r\n   * way the Creator can stay independent of concrete product classes.\r\n   */\r\n public:\r\n  Product* FactoryMethod() const override {\r\n    return new ConcreteProduct1();\r\n  }\r\n};\r\n\r\nclass ConcreteCreator2 : public Creator {\r\n public:\r\n  Product* FactoryMethod() const override {\r\n    return new ConcreteProduct2();\r\n  }\r\n};\r\n\r\n/**\r\n * The client code works with an instance of a concrete creator, albeit through\r\n * its base interface. As long as the client keeps working with the creator via\r\n * the base interface, you can pass it any creator\'s subclass.\r\n */\r\nvoid ClientCode(const Creator& creator) {\r\n  // ...\r\n  std::cout << "Client: I\'m not aware of the creator\'s class, but it still works.\\n"\r\n            << creator.SomeOperation() << std::endl;\r\n  // ...\r\n}\r\n\r\n/**\r\n * The Application picks a creator\'s type depending on the configuration or\r\n * environment.\r\n */\r\n\r\nint main() {\r\n  std::cout << "App: Launched with the ConcreteCreator1.\\n";\r\n  Creator* creator = new ConcreteCreator1();\r\n  ClientCode(*creator);\r\n  std::cout << std::endl;\r\n  std::cout << "App: Launched with the ConcreteCreator2.\\n";\r\n  Creator* creator2 = new ConcreteCreator2();\r\n  ClientCode(*creator2);\r\n\r\n  delete creator;\r\n  delete creator2;\r\n  return 0;\r\n}\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",metastring:'title="output"',children:"App: Launched with the ConcreteCreator1.\r\nClient: I'm not aware of the creator's class, but it still works.\r\nCreator: The same creator's code has just worked with {Result of the ConcreteProduct1}\r\n\r\nApp: Launched with the ConcreteCreator2.\r\nClient: I'm not aware of the creator's class, but it still works.\r\nCreator: The same creator's code has just worked with {Result of the ConcreteProduct2}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f",children:"\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f"}),"\n",(0,t.jsx)(n.p,{children:"\u542b\u4e49"}),"\n",(0,t.jsx)(n.p,{children:"AbstractFactory \u4e3a\u8bbf\u95ee\u7c7b\u63d0\u4f9b\u4e00\u4e2a\u521b\u5efa\u4e00\u7ec4\u76f8\u5173\u6216\u76f8\u4e92\u4f9d\u8d56\u5bf9\u8c61\u7684\u63a5\u53e3\uff0c\u4e14\u8bbf\u95ee\u7c7b\u65e0\u987b\u6307\u5b9a\u6240\u8981\u4ea7\u54c1\u7684\u5177\u4f53\u7c7b\u5c31\u80fd\u5f97\u5230\u540c\u65cf\u7684\u4e0d\u540c\u7b49\u7ea7\u7684\u4ea7\u54c1\u7684\u6a21\u5f0f\u7ed3\u6784\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u662f\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u7684\u5347\u7ea7\u7248\u672c\uff0c\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u53ea\u751f\u4ea7\u4e00\u4e2a\u7b49\u7ea7\u7684\u4ea7\u54c1\uff0c\u800c\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u53ef\u751f\u4ea7\u591a\u4e2a\u7b49\u7ea7\u7684\u4ea7\u54c1\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u4f18\u70b9\r\n\u53ef\u4ee5\u5728\u7c7b\u7684\u5185\u90e8\u5bf9\u4ea7\u54c1\u65cf\u4e2d\u76f8\u5173\u8054\u7684\u591a\u7b49\u7ea7\u4ea7\u54c1\u5171\u540c\u7ba1\u7406\uff0c\u800c\u4e0d\u5fc5\u4e13\u95e8\u5f15\u5165\u591a\u4e2a\u65b0\u7684\u7c7b\u6765\u8fdb\u884c\u7ba1\u7406\u3002\r\n\u5f53\u589e\u52a0\u4e00\u4e2a\u65b0\u7684\u4ea7\u54c1\u65cf\u65f6\u4e0d\u9700\u8981\u4fee\u6539\u539f\u4ee3\u7801\uff0c\u6ee1\u8db3\u5f00\u95ed\u539f\u5219\u3002\r\n\u7f3a\u70b9\r\n\u5f53\u4ea7\u54c1\u65cf\u4e2d\u9700\u8981\u589e\u52a0\u4e00\u4e2a\u65b0\u7684\u4ea7\u54c1\u65f6\uff0c\u6240\u6709\u7684\u5de5\u5382\u7c7b\u90fd\u9700\u8981\u8fdb\u884c\u4fee\u6539\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u662f\u4e00\u79cd\u521b\u5efa\u578b\u8bbe\u8ba1\u6a21\u5f0f\uff0c \u5b83\u80fd\u521b\u5efa\u4e00\u7cfb\u5217\u76f8\u5173\u7684\u5bf9\u8c61\uff0c \u800c\u65e0\u9700\u6307\u5b9a\u5176\u5177\u4f53\u7c7b\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u5efa\u8bae\u4e3a\u7cfb\u5217\u4e2d\u7684\u6bcf\u4ef6\u4ea7\u54c1\u660e\u786e\u58f0\u660e\u63a5\u53e3 \uff08\u4f8b\u5982\u6905\u5b50\u3001 \u6c99\u53d1\u6216\u5496\u5561\u684c\uff09\u3002 \u7136\u540e\uff0c \u786e\u4fdd\u6240\u6709\u4ea7\u54c1\u53d8\u4f53\u90fd\u7ee7\u627f\u8fd9\u4e9b\u63a5\u53e3\u3002 \u4f8b\u5982\uff0c \u6240\u6709\u98ce\u683c\u7684\u6905\u5b50\u90fd\u5b9e\u73b0 \u6905\u5b50\u63a5\u53e3\uff1b \u6240\u6709\u98ce\u683c\u7684\u5496\u5561\u684c\u90fd\u5b9e\u73b0 \u5496\u5561\u684c\u63a5\u53e3\uff0c \u4ee5\u6b64\u7c7b\u63a8\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u63a5\u4e0b\u6765\uff0c \u6211\u4eec\u9700\u8981\u58f0\u660e\u62bd\u8c61\u5de5\u5382\u2014\u2014\u5305\u542b\u7cfb\u5217\u4e2d\u6240\u6709\u4ea7\u54c1\u6784\u9020\u65b9\u6cd5\u7684\u63a5\u53e3\u3002 \u4f8b\u5982 createChair\u521b\u5efa\u6905\u5b50 \u3001\u200b  createSofa\u521b\u5efa\u6c99\u53d1\u548c createCoffeeTable\u521b\u5efa\u5496\u5561\u684c \u3002 \u8fd9\u4e9b\u65b9\u6cd5\u5fc5\u987b\u8fd4\u56de\u62bd\u8c61\u4ea7\u54c1\u7c7b\u578b\uff0c \u5373\u6211\u4eec\u4e4b\u524d\u62bd\u53d6\u7684\u90a3\u4e9b\u63a5\u53e3\uff1a\u6905\u5b50 \uff0c\u6c99\u53d1\u548c \u5496\u5561\u684c\u7b49\u7b49\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:'#pragma once\r\n\r\n#include <stdio.h>\r\n\r\nnamespace abstract_factory {\r\n    \r\n/// @brief \u62bd\u8c61\u4ea7\u54c1 - \u5b9a\u4e49\u4e86\u4ea7\u54c1\u7684\u89c4\u8303\uff0c\u63cf\u8ff0\u4e86\u4ea7\u54c1\u7684\u4e3b\u8981\u7279\u6027\u548c\u529f\u80fd\r\nclass AbstractProductA {\r\npublic:\r\n    virtual ~AbstractProductA() {}\r\n    virtual void Show() = 0;\r\n};\r\nclass AbstractProductB {\r\npublic:\r\n    virtual ~AbstractProductB() {}\r\n    virtual void Show() = 0;\r\n};\r\n\r\n/// @brief \u5177\u4f53\u4ea7\u54c1 - \u5b9e\u73b0\u4e86\u62bd\u8c61\u4ea7\u54c1\u89d2\u8272\u6240\u5b9a\u4e49\u7684\u63a5\u53e3\uff0c\u7531\u5177\u4f53\u5de5\u5382\u6765\u521b\u5efa\uff0c\u5b83\u540c\u5177\u4f53\u5de5\u5382\u4e4b\u95f4\u4e00\u4e00\u5bf9\u5e94\r\nclass ConcreteProductA1 : public AbstractProductA {\r\npublic:\r\n    virtual void Show() {\r\n        printf("ConcreteProductA1 Show ...\\n");\r\n    }\r\n};\r\nclass ConcreteProductA2 : public AbstractProductA {\r\npublic:\r\n    virtual void Show() {\r\n        printf("ConcreteProductA2 Show ...\\n");\r\n    }\r\n};\r\nclass ConcreteProductB1 : public AbstractProductB {\r\npublic:\r\n    virtual void Show() {\r\n        printf("ConcreteProductB1 Show ...\\n");\r\n    }\r\n};\r\nclass ConcreteProductB2 : public AbstractProductB {\r\npublic:\r\n    virtual void Show() {\r\n        printf("ConcreteProductB2 Show ...\\n");\r\n    }\r\n};\r\n\r\n/// @brief \u62bd\u8c61\u5de5\u5382 - \u63d0\u4f9b\u4e86\u521b\u5efa\u4ea7\u54c1\u7684\u63a5\u53e3\r\nclass AbstractFactory {\r\npublic:\r\n    virtual ~AbstractFactory() {}\r\n    virtual AbstractProductA* CreateProductA() = 0;\r\n    virtual AbstractProductB* CreateProductB() = 0;\r\n};\r\n\r\n/// @brief \u5177\u4f53\u5de5\u5382 - \u5b9e\u73b0\u62bd\u8c61\u5de5\u5382\u4e2d\u7684\u62bd\u8c61\u65b9\u6cd5\uff0c\u5b8c\u6210\u5177\u4f53\u4ea7\u54c1\u7684\u521b\u5efa\r\nclass ConcreteFactory1 : public AbstractFactory {\r\npublic:\r\n    virtual AbstractProductA* CreateProductA() {\r\n        AbstractProductA* ptr = new ConcreteProductA1();\r\n        return ptr;\r\n    }\r\n    virtual AbstractProductB* CreateProductB() {\r\n        AbstractProductB* ptr = new ConcreteProductB1();\r\n        return ptr;\r\n    }\r\n};\r\nclass ConcreteFactory2 : public AbstractFactory {\r\npublic:\r\n    virtual AbstractProductA* CreateProductA() {\r\n        AbstractProductA* ptr = new ConcreteProductA2();\r\n        return ptr;\r\n    }\r\n    virtual AbstractProductB* CreateProductB() {\r\n        AbstractProductB* ptr = new ConcreteProductB2();\r\n        return ptr;\r\n    }\r\n};\r\n\r\n} // namespace abstract_factory\r\n\r\nvoid main() {\r\n    printf("-------------------- %s --------------------\\n", __FUNCTION__);\r\n    abstract_factory::AbstractFactory* ptr_factory_1 = new abstract_factory::ConcreteFactory1();\r\n    abstract_factory::AbstractProductA* ptr_product_A1 = ptr_factory_1->CreateProductA();\r\n    ptr_product_A1->Show();\r\n    delete ptr_factory_1;\r\n    delete ptr_product_A1;\r\n}\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",metastring:'title="output"',children:"-------------------- main --------------------\r\nConcreteProductA1 Show ...\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\u5efa\u9020\u8005\u6a21\u5f0f",children:"\u5efa\u9020\u8005\u6a21\u5f0f"}),"\n",(0,t.jsx)(n.p,{children:"\u542b\u4e49"}),"\n",(0,t.jsx)(n.p,{children:"Builder \u5c06\u4e00\u4e2a\u590d\u6742\u5bf9\u8c61\u5206\u89e3\u6210\u591a\u4e2a\u76f8\u5bf9\u7b80\u5355\u7684\u90e8\u5206\uff0c\u7136\u540e\u6839\u636e\u4e0d\u540c\u9700\u8981\u5206\u522b\u521b\u5efa\u5b83\u4eec\uff0c\u6700\u540e\u6784\u5efa\u6210\u8be5\u590d\u6742\u5bf9\u8c61\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u4f18\u70b9\r\n\u5404\u4e2a\u5177\u4f53\u7684\u5efa\u9020\u8005\u76f8\u4e92\u72ec\u7acb\uff0c\u6709\u5229\u4e8e\u7cfb\u7edf\u7684\u6269\u5c55\u3002\r\n\u5ba2\u6237\u7aef\u4e0d\u5fc5\u77e5\u9053\u4ea7\u54c1\u5185\u90e8\u7ec4\u6210\u7684\u7ec6\u8282\uff0c\u4fbf\u4e8e\u63a7\u5236\u7ec6\u8282\u98ce\u9669\u3002\r\n\u7f3a\u70b9\r\n\u4ea7\u54c1\u7684\u7ec4\u6210\u90e8\u5206\u5fc5\u987b\u76f8\u540c\uff0c\u8fd9\u9650\u5236\u4e86\u5176\u4f7f\u7528\u8303\u56f4\u3002\r\n\u5982\u679c\u4ea7\u54c1\u7684\u5185\u90e8\u53d8\u5316\u590d\u6742\uff0c\u8be5\u6a21\u5f0f\u4f1a\u589e\u52a0\u5f88\u591a\u7684\u5efa\u9020\u8005\u7c7b\u3002\r\n\u5efa\u9020\u8005\u6a21\u5f0f\u6ce8\u91cd\u96f6\u90e8\u4ef6\u7684\u7ec4\u88c5\u8fc7\u7a0b\uff0c\u800c\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u66f4\u6ce8\u91cd\u96f6\u90e8\u4ef6\u7684\u521b\u5efa\u8fc7\u7a0b\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u5e94\u7528\u573a\u666f"}),"\n",(0,t.jsx)(n.p,{children:"\u521b\u5efa\u7684\u5bf9\u8c61\u8f83\u590d\u6742\uff0c\u7531\u591a\u4e2a\u90e8\u4ef6\u6784\u6210\uff0c\u5404\u90e8\u4ef6\u9762\u4e34\u7740\u590d\u6742\u7684\u53d8\u5316\uff0c\u4f46\u6784\u4ef6\u95f4\u7684\u5efa\u9020\u987a\u5e8f\u662f\u7a33\u5b9a\u7684\u3002\r\n\u521b\u5efa\u590d\u6742\u5bf9\u8c61\u7684\u7b97\u6cd5\u72ec\u7acb\u4e8e\u8be5\u5bf9\u8c61\u7684\u7ec4\u6210\u90e8\u5206\u4ee5\u53ca\u5b83\u4eec\u7684\u88c5\u914d\u65b9\u5f0f\uff0c\u5373\u4ea7\u54c1\u7684\u6784\u5efa\u8fc7\u7a0b\u548c\u6700\u7ec8\u7684\u8868\u793a\u662f\u72ec\u7acb\u7684\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:'/**\r\n * It makes sense to use the Builder pattern only when your products are quite\r\n * complex and require extensive configuration.\r\n *\r\n * Unlike in other creational patterns, different concrete builders can produce\r\n * unrelated products. In other words, results of various builders may not\r\n * always follow the same interface.\r\n */\r\n\r\nclass Product1{\r\n    public:\r\n    std::vector<std::string> parts_;\r\n    void ListParts()const{\r\n        std::cout << "Product parts: ";\r\n        for (size_t i=0;i<parts_.size();i++){\r\n            if(parts_[i]== parts_.back()){\r\n                std::cout << parts_[i];\r\n            }else{\r\n                std::cout << parts_[i] << ", ";\r\n            }\r\n        }\r\n        std::cout << "\\n\\n"; \r\n    }\r\n};\r\n\r\n\r\n/**\r\n * The Builder interface specifies methods for creating the different parts of\r\n * the Product objects.\r\n */\r\nclass Builder{\r\n    public:\r\n    virtual ~Builder(){}\r\n    virtual void ProducePartA() const =0;\r\n    virtual void ProducePartB() const =0;\r\n    virtual void ProducePartC() const =0;\r\n};\r\n/**\r\n * The Concrete Builder classes follow the Builder interface and provide\r\n * specific implementations of the building steps. Your program may have several\r\n * variations of Builders, implemented differently.\r\n */\r\nclass ConcreteBuilder1 : public Builder{\r\n    private:\r\n\r\n    Product1* product;\r\n\r\n    /**\r\n     * A fresh builder instance should contain a blank product object, which is\r\n     * used in further assembly.\r\n     */\r\n    public:\r\n\r\n    ConcreteBuilder1(){\r\n        this->Reset();\r\n    }\r\n\r\n    ~ConcreteBuilder1(){\r\n        delete product;\r\n    }\r\n\r\n    void Reset(){\r\n        this->product= new Product1();\r\n    }\r\n    /**\r\n     * All production steps work with the same product instance.\r\n     */\r\n\r\n    void ProducePartA()const override{\r\n        this->product->parts_.push_back("PartA1");\r\n    }\r\n\r\n    void ProducePartB()const override{\r\n        this->product->parts_.push_back("PartB1");\r\n    }\r\n\r\n    void ProducePartC()const override{\r\n        this->product->parts_.push_back("PartC1");\r\n    }\r\n\r\n    /**\r\n     * Concrete Builders are supposed to provide their own methods for\r\n     * retrieving results. That\'s because various types of builders may create\r\n     * entirely different products that don\'t follow the same interface.\r\n     * Therefore, such methods cannot be declared in the base Builder interface\r\n     * (at least in a statically typed programming language). Note that PHP is a\r\n     * dynamically typed language and this method CAN be in the base interface.\r\n     * However, we won\'t declare it there for the sake of clarity.\r\n     *\r\n     * Usually, after returning the end result to the client, a builder instance\r\n     * is expected to be ready to start producing another product. That\'s why\r\n     * it\'s a usual practice to call the reset method at the end of the\r\n     * `getProduct` method body. However, this behavior is not mandatory, and\r\n     * you can make your builders wait for an explicit reset call from the\r\n     * client code before disposing of the previous result.\r\n     */\r\n\r\n    /**\r\n     * Please be careful here with the memory ownership. Once you call\r\n     * GetProduct the user of this function is responsable to release this\r\n     * memory. Here could be a better option to use smart pointers to avoid\r\n     * memory leaks\r\n     */\r\n\r\n    Product1* GetProduct() {\r\n        Product1* result= this->product;\r\n        this->Reset();\r\n        return result;\r\n    }\r\n};\r\n\r\n/**\r\n * The Director is only responsible for executing the building steps in a\r\n * particular sequence. It is helpful when producing products according to a\r\n * specific order or configuration. Strictly speaking, the Director class is\r\n * optional, since the client can control builders directly.\r\n */\r\nclass Director{\r\n    /**\r\n     * @var Builder\r\n     */\r\n    private:\r\n    Builder* builder;\r\n    /**\r\n     * The Director works with any builder instance that the client code passes\r\n     * to it. This way, the client code may alter the final type of the newly\r\n     * assembled product.\r\n     */\r\n\r\n    public:\r\n\r\n    void set_builder(Builder* builder){\r\n        this->builder=builder;\r\n    }\r\n\r\n    /**\r\n     * The Director can construct several product variations using the same\r\n     * building steps.\r\n     */\r\n\r\n    void BuildMinimalViableProduct(){\r\n        this->builder->ProducePartA();\r\n    }\r\n    \r\n    void BuildFullFeaturedProduct(){\r\n        this->builder->ProducePartA();\r\n        this->builder->ProducePartB();\r\n        this->builder->ProducePartC();\r\n    }\r\n};\r\n/**\r\n * The client code creates a builder object, passes it to the director and then\r\n * initiates the construction process. The end result is retrieved from the\r\n * builder object.\r\n */\r\n/**\r\n * I used raw pointers for simplicity however you may prefer to use smart\r\n * pointers here\r\n */\r\nvoid ClientCode(Director& director)\r\n{\r\n    ConcreteBuilder1* builder = new ConcreteBuilder1();\r\n    director.set_builder(builder);\r\n    std::cout << "Standard basic product:\\n"; \r\n    director.BuildMinimalViableProduct();\r\n    \r\n    Product1* p= builder->GetProduct();\r\n    p->ListParts();\r\n    delete p;\r\n\r\n    std::cout << "Standard full featured product:\\n"; \r\n    director.BuildFullFeaturedProduct();\r\n\r\n    p= builder->GetProduct();\r\n    p->ListParts();\r\n    delete p;\r\n\r\n    // Remember, the Builder pattern can be used without a Director class.\r\n    std::cout << "Custom product:\\n";\r\n    builder->ProducePartA();\r\n    builder->ProducePartC();\r\n    p=builder->GetProduct();\r\n    p->ListParts();\r\n    delete p;\r\n\r\n    delete builder;\r\n}\r\n\r\nint main(){\r\n    Director* director= new Director();\r\n    ClientCode(*director);\r\n    delete director;\r\n    return 0;    \r\n}\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",metastring:'title="output"',children:"Standard basic product:\r\nProduct parts: PartA1\r\n\r\nStandard full featured product:\r\nProduct parts: PartA1, PartB1, PartC1\r\n\r\nCustom product:\r\nProduct parts: PartA1, PartC1\n"})})]})}function u(r={}){const{wrapper:n}={...(0,o.R)(),...r.components};return n?(0,t.jsx)(n,{...r,children:(0,t.jsx)(l,{...r})}):l(r)}},8453:(r,n,e)=>{e.d(n,{R:()=>i,x:()=>s});var t=e(6540);const o={},c=t.createContext(o);function i(r){const n=t.useContext(c);return t.useMemo((function(){return"function"==typeof r?r(n):{...n,...r}}),[n,r])}function s(r){let n;return n=r.disableParentContext?"function"==typeof r.components?r.components(o):r.components||o:i(r.components),t.createElement(c.Provider,{value:n},r.children)}}}]);