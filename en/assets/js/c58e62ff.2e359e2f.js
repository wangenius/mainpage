"use strict";(self.webpackChunkpanovista=self.webpackChunkpanovista||[]).push([[1174],{5472:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var r=t(4848),i=t(8453);const s={title:"\u58f0\u660e",sidebar_position:1,slug:"\u58f0\u660e"},l="\u58f0\u660e",a={id:"lang/rust/\u53d8\u91cf\u548c\u58f0\u660e/\u58f0\u660e",title:"\u58f0\u660e",description:"Use the let keyword to declare a variable.",source:"@site/docs/lang/rust/\u53d8\u91cf\u548c\u58f0\u660e/\u58f0\u660e.mdx",sourceDirName:"lang/rust/\u53d8\u91cf\u548c\u58f0\u660e",slug:"/lang/rust/\u53d8\u91cf\u548c\u58f0\u660e/\u58f0\u660e",permalink:"/en/docs/lang/rust/\u53d8\u91cf\u548c\u58f0\u660e/\u58f0\u660e",draft:!1,unlisted:!1,editUrl:"https://github.com/wangenius/wangenius.github.io/tree/master/docs/lang/rust/\u53d8\u91cf\u548c\u58f0\u660e/\u58f0\u660e.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"\u58f0\u660e",sidebar_position:1,slug:"\u58f0\u660e"},sidebar:"rust",previous:{title:"\u53d8\u91cf\u548c\u5e38\u91cf",permalink:"/en/docs/lang/rust/\u53d8\u91cf\u548c\u58f0\u660e/\u53d8\u91cf\u548c\u5e38\u91cf"},next:{title:"\u4f5c\u7528\u57df",permalink:"/en/docs/lang/rust/\u53d8\u91cf\u548c\u58f0\u660e/\u4f5c\u7528\u57df"}},d={},c=[{value:"\u6d6e\u70b9\u6570",id:"\u6d6e\u70b9\u6570",level:3},{value:"\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362",id:"\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362",level:2},{value:"Number Separator",id:"number-separator",level:2}];function o(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{id:"\u58f0\u660e",children:"\u58f0\u660e"}),"\n",(0,r.jsx)(e.p,{children:"Use the let keyword to declare a variable."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'fn main() {\n    let name = "wangenius";  // string type\n    let rating_float = 4.5;                 // float type\n    let ismale = true;          // boolean type\n    let icon_char = \'\u2665\';                    //unicode character type\n\n    println!("name is:{}",name);\n    println!("rating on 5 is:{}",rating_float);\n    println!("is growing :{}",ismale);\n    println!("icon is:{}",icon_char);\n }\n'})}),"\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"size"}),(0,r.jsx)(e.th,{children:"signed"}),(0,r.jsx)(e.th,{children:"unsigned"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"8 bit"}),(0,r.jsx)(e.td,{children:"i8"}),(0,r.jsx)(e.td,{children:"u8"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"16 bit"}),(0,r.jsx)(e.td,{children:"i16"}),(0,r.jsx)(e.td,{children:"u16"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"32 bit"}),(0,r.jsx)(e.td,{children:"i32(default)"}),(0,r.jsx)(e.td,{children:"u32"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"64 bit"}),(0,r.jsx)(e.td,{children:"i64"}),(0,r.jsx)(e.td,{children:"u64"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"128 bit"}),(0,r.jsx)(e.td,{children:"i128"}),(0,r.jsx)(e.td,{children:"u128"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"Arch"}),(0,r.jsx)(e.td,{children:"isize"}),(0,r.jsx)(e.td,{children:"usize"})]})]})]}),"\n",(0,r.jsx)(e.p,{children:"\u5927\u5c0f\u4e3a arch \u7684\u6574\u6570\u5728 x86 \u8ba1\u7b97\u673a\u4e0a\u4e3a 32 \u4f4d\uff0c\u5728 x64 \u8ba1\u7b97\u673a\u4e0a\u4e3a 64 \u4f4d\u3002"}),"\n",(0,r.jsx)(e.h3,{id:"\u6d6e\u70b9\u6570",children:"\u6d6e\u70b9\u6570"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'fn main() {\n   let result = 10.00;        //f64 by default\n   let interest:f32 = 8.35;\n   let cost:f64 = 15000.600;  //double precision\n\n   println!("result value is {}",result);\n   println!("interest is {}",interest);\n   println!("cost is {}",cost);\n}\n'})}),"\n",(0,r.jsx)(e.h2,{id:"\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362",children:"\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362"}),"\n",(0,r.jsx)(e.p,{children:"Automatic Type Casting"}),"\n",(0,r.jsx)(e.p,{children:"Rust \u4e2d\u4e0d\u5141\u8bb8\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\u3002\u8003\u8651\u4ee5\u4e0b\u4ee3\u7801\u7247\u6bb5\u3002\u6574\u6570\u503c\u88ab\u5206\u914d\u7ed9\u6d6e\u70b9\u53d8\u91cf\u5229\u606f\u3002"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'fn main() {\n   let interest:f32 = 8;   // integer assigned to float variable\n   println!("interest is {}",interest);\n}\n'})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-text",metastring:'title="output"',children:"error[E0308]: mismatched types\n   --\x3e main.rs:2:22\n   |\n 2 | let interest:f32=8;\n   |    ^ expected f32, found integral variable\n   |\n   = note: expected type `f32`\n      found type `{integer}`\nerror: aborting due to previous error(s)\n"})}),"\n",(0,r.jsx)(e.h2,{id:"number-separator",children:"Number Separator"}),"\n",(0,r.jsx)(e.p,{children:"\u4e3a\u4e86\u65b9\u4fbf\u5927\u6570\u5b57\u7684\u53ef\u8bfb\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u89c6\u89c9\u5206\u9694\u7b26 _ \u4e0b\u5212\u7ebf\u6765\u5206\u9694\u6570\u5b57\u3002\u5373 50,000 \u53ef\u4ee5\u5199\u6210 50_000 \u3002\u4e0b\u9762\u7684\u793a\u4f8b\u663e\u793a\u4e86\u8fd9\u4e00\u70b9\u3002Rust \u8fd8\u652f\u6301\u79d1\u5b66 E \u7b26\u53f7\uff0c\u4f8b\u5982 1e6 \uff0c 7.6e-4 \u3002\u5173\u8054\u7684\u7c7b\u578b\u662f f64 \u3002"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'fn main() {\n    // Integer addition\n    println!("1 + 2 = {}", 1u32 + 2);\n\n    // Integer subtraction\n    println!("1 - 2 = {}", 1i32 - 2);\n    // Scientific notation\n    println!("1e4 is {}, -2.5e-3 is {}", 1e4, -2.5e-3);\n\n    // Short-circuiting boolean logic\n    println!("true AND false is {}", true && false);\n    println!("true OR false is {}", true || false);\n    println!("NOT true is {}", !true);\n\n    // Bitwise operations\n    println!("0011 AND 0101 is {:04b}", 0b0011u32 & 0b0101);\n    println!("0011 OR 0101 is {:04b}", 0b0011u32 | 0b0101);\n    println!("0011 XOR 0101 is {:04b}", 0b0011u32 ^ 0b0101);\n    println!("1 << 5 is {}", 1u32 << 5);\n    println!("0x80 >> 2 is 0x{:x}", 0x80u32 >> 2);\n\n    // Use underscores to improve readability!\n    println!("One million is written as {}", 1_000_000u32);\n}\n'})})]})}function u(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(o,{...n})}):o(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>l,x:()=>a});var r=t(6540);const i={},s=r.createContext(i);function l(n){const e=r.useContext(s);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:l(n.components),r.createElement(s.Provider,{value:e},n.children)}}}]);